const t='{"documentCount":42,"nextId":42,"documentIds":{"0":"/article/wlhley8t/#画类图","1":"/java-concurrent/#学习视频","2":"/mysql-learn/#学习书籍","3":"/java-concurrent/#juc是什么","4":"/java-concurrent/#前置知识","5":"/learn/#介绍","6":"/design-pattern/#学习视频","7":"/design-pattern/biychupa/#设计模式的重要性","8":"/design-pattern/#学习书籍","9":"/article/adrm6moe/#简介","10":"/design-pattern/htacao8y/#基本介绍","11":"/design-pattern/biychupa/#设计模式在软件中哪里","12":"/design-pattern/06w076lh/#基本介绍","13":"/article/adrm6moe/#并行流和串行流","14":"/design-pattern/htacao8y/#应用实例","15":"/design-pattern/biychupa/#设计模式的目的","16":"/design-pattern/06w076lh/#应用实例","17":"/design-pattern/nu3k3c27/#基本介绍","18":"/design-pattern/vys0x21y/#oo-面向对象-中继承的思考和说明","19":"/article/adrm6moe/#lambda-表达式","20":"/design-pattern/htacao8y/#方案1","21":"/design-pattern/biychupa/#设计模式常用七大原则","22":"/design-pattern/nu3k3c27/#应用实例","23":"/design-pattern/vys0x21y/#基本介绍","24":"/article/adrm6moe/#举例","25":"/design-pattern/htacao8y/#方案2","26":"/design-pattern/nu3k3c27/#方案-1","27":"/design-pattern/vys0x21y/#实例","28":"/article/adrm6moe/#基本使用","29":"/design-pattern/htacao8y/#方案3","30":"/design-pattern/nu3k3c27/#方案-2","31":"/design-pattern/vys0x21y/#错误示例","32":"/article/adrm6moe/#函数式-functional-接口","33":"/design-pattern/htacao8y/#注意事项和细节","34":"/design-pattern/nu3k3c27/#依赖关系传递的三种方式","35":"/article/adrm6moe/#方法引用和构造器引用","36":"/design-pattern/nu3k3c27/#接口传递","37":"/article/adrm6moe/#stream-api","38":"/design-pattern/nu3k3c27/#构造方法传递","39":"/article/adrm6moe/#optional类","40":"/design-pattern/nu3k3c27/#setter-方式传递","41":"/design-pattern/nu3k3c27/#注意事项和细节"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,1],"1":[1,1,2],"2":[1,1,2],"3":[1,1,5],"4":[1,1,8],"5":[1,1,2],"6":[1,1,3],"7":[1,1,16],"8":[1,1,1],"9":[1,1,17],"10":[1,1,9],"11":[2,1,11],"12":[1,1,3],"13":[1,2,7],"14":[1,1,2],"15":[1,1,40],"16":[1,1,90],"17":[1,1,30],"18":[3,1,21],"19":[2,1,7],"20":[1,2,50],"21":[2,1,10],"22":[1,1,3],"23":[1,1,31],"24":[1,3,42],"25":[1,2,58],"26":[2,2,68],"27":[1,1,1],"28":[1,3,57],"29":[1,2,57],"30":[2,2,60],"31":[1,2,74],"32":[3,1,1],"33":[1,1,12],"34":[1,1,1],"35":[1,1,1],"36":[1,2,47],"37":[2,1,1],"38":[1,2,43],"39":[1,1,1],"40":[2,2,44],"41":[1,1,10]},"averageFieldLength":[1.2619047619047619,1.3333333333333333,22.595238095238095],"storedFields":{"0":{"title":"画类图","titles":[null]},"1":{"title":"学习视频","titles":[null]},"2":{"title":"学习书籍","titles":[null]},"3":{"title":"JUC是什么","titles":[null]},"4":{"title":"前置知识","titles":[null]},"5":{"title":"介绍","titles":[null]},"6":{"title":"学习视频","titles":[null]},"7":{"title":"设计模式的重要性","titles":[null]},"8":{"title":"学习书籍","titles":[null]},"9":{"title":"简介","titles":[null]},"10":{"title":"基本介绍","titles":[null]},"11":{"title":"设计模式在软件中哪里?","titles":[null]},"12":{"title":"基本介绍","titles":[null]},"13":{"title":"并行流和串行流","titles":[null,"简介"]},"14":{"title":"应用实例","titles":[null]},"15":{"title":"设计模式的目的","titles":[null]},"16":{"title":"应用实例","titles":[null]},"17":{"title":"基本介绍","titles":[null]},"18":{"title":"OO(面向对象) 中继承的思考和说明","titles":[null]},"19":{"title":"Lambda 表达式","titles":[null]},"20":{"title":"方案1","titles":[null,"应用实例"]},"21":{"title":"设计模式常用七大原则:","titles":[null]},"22":{"title":"应用实例","titles":[null]},"23":{"title":"基本介绍","titles":[null]},"24":{"title":"举例","titles":[null,"Lambda 表达式"]},"25":{"title":"方案2","titles":[null,"应用实例"]},"26":{"title":"方案 1","titles":[null,"应用实例"]},"27":{"title":"实例","titles":[null]},"28":{"title":"基本使用","titles":[null,"Lambda 表达式"]},"29":{"title":"方案3","titles":[null,"应用实例"]},"30":{"title":"方案 2","titles":[null,"应用实例"]},"31":{"title":"错误示例","titles":[null,"实例"]},"32":{"title":"函数式(Functional)接口","titles":[null]},"33":{"title":"注意事项和细节","titles":[null]},"34":{"title":"依赖关系传递的三种方式","titles":[null]},"35":{"title":"方法引用和构造器引用","titles":[null]},"36":{"title":"接口传递","titles":[null,"依赖关系传递的三种方式"]},"37":{"title":"Stream API","titles":[null]},"38":{"title":"构造方法传递","titles":[null,"依赖关系传递的三种方式"]},"39":{"title":"Optional类","titles":[null]},"40":{"title":"setter 方式传递","titles":[null,"依赖关系传递的三种方式"]},"41":{"title":"注意事项和细节","titles":[null]}},"dirtCount":0,"index":[["利于层序扩展和优化",{"2":{"41":1}}],["变量的声明类型尽量是抽象类或接口",{"2":{"41":1}}],["底层模块尽量都要有抽象类或接口",{"2":{"41":1}}],["构造器",{"2":{"38":1}}],["构造方法传递",{"0":{"38":1}}],["成员",{"2":{"38":1}}],["打开",{"2":{"36":1,"38":1,"40":1}}],["长虹电视机",{"2":{"36":1,"38":1,"40":1}}],["通过setter方法传递",{"2":{"40":1}}],["通过setter方法进行依赖传递",{"2":{"40":1}}],["通过构造方法依赖传递",{"2":{"38":1}}],["通过构造器进行依赖传递",{"2":{"38":1}}],["通过接口传递实现依赖",{"2":{"36":1}}],["通常情况下",{"2":{"33":1}}],["\\tprivate",{"2":{"40":1}}],["\\tpublic",{"2":{"36":2,"38":2,"40":7}}],["\\t",{"2":{"36":3,"38":3,"40":5}}],["\\t\\tthis",{"2":{"40":2}}],["\\t\\tsystem",{"2":{"36":1,"38":1,"40":1}}],["\\t\\t",{"2":{"36":1,"38":1,"40":1}}],["\\t\\topenandclose",{"2":{"36":2,"38":2,"40":3}}],["\\t\\tchanghong",{"2":{"36":1,"38":1,"40":1}}],["才可以在方法级保持单一职责原则",{"2":{"33":1}}],["才能在代码级违反单一职责原则",{"2":{"33":1}}],["只有类中方法数量足够少",{"2":{"33":1}}],["只有逻辑足够简单",{"2":{"33":1}}],["只是增加方法",{"2":{"29":1}}],["降低变更引起的风险",{"2":{"33":1}}],["降低类的复杂性",{"2":{"33":1}}],["提高类的可读性",{"2":{"33":1}}],["一个类只负责一种职责",{"2":{"33":1}}],["一个类对于另一个类的依赖应该建立在最小接口上",{"2":{"16":1}}],["注意事项和细节",{"0":{"33":1,"41":1}}],["函数式",{"0":{"32":1}}],["7",{"2":{"31":1}}],["重写的",{"2":{"31":1}}],["重写了父类的方法",{"2":{"31":1}}],["重用性",{"2":{"15":1}}],["9",{"2":{"31":2}}],["与",{"2":{"31":1}}],["新增了一个方法func2",{"2":{"31":1}}],["返回两个数的差",{"2":{"31":1}}],["functional",{"0":{"32":1}}],["func2",{"2":{"31":2}}],["func1的值",{"2":{"31":1}}],["func1",{"2":{"31":7}}],["8",{"2":{"31":3}}],["8=9",{"2":{"31":1}}],["8=",{"2":{"31":3}}],["07",{"2":{"31":1}}],["09",{"2":{"30":1}}],["liskov1",{"2":{"31":2}}],["liskov",{"2":{"31":2}}],["lambda体",{"2":{"28":1}}],["lambda形参列表",{"2":{"28":1}}],["lambda操作符",{"2":{"28":1}}],["lambda",{"0":{"19":1},"1":{"24":1,"28":1},"2":{"28":1}}],["lambda表达式的本质就是",{"2":{"28":1}}],["lambda表达式的本质是什么呢",{"2":{"28":1}}],["lambda表达式",{"2":{"9":1,"24":2,"28":2}}],["运行结果",{"2":{"31":1}}],["运行代码结果如下",{"2":{"25":1}}],["运行代码输出结果如下",{"2":{"20":1}}],["错误示例",{"0":{"31":1}}],["微信信息",{"2":{"30":2}}],["微信",{"2":{"30":1}}],["电子邮件",{"2":{"30":1}}],["电子邮件信息",{"2":{"26":2,"30":2}}],["定义接口",{"2":{"30":1}}],["定义的所有程序",{"2":{"23":1}}],["客户端无需改变",{"2":{"30":1}}],["客户端不应该依赖它不需要的接口",{"2":{"12":1}}],["进行优化",{"2":{"30":1}}],["进程了解",{"2":{"4":1}}],["仍然遵守单一职责原则",{"2":{"29":1}}],["虽然没有在",{"2":{"29":1}}],["虽然不强制子类遵守",{"2":{"18":1}}],["考虑在交通工具类中",{"2":{"29":1}}],["还需要修改客户端",{"2":{"29":1}}],["还可能有微信",{"2":{"26":1}}],["作为接口的实例",{"2":{"28":1}}],["需要一个参数",{"2":{"28":1}}],["需要考虑所有的子类",{"2":{"18":1}}],["格式二",{"2":{"28":1}}],["格式一",{"2":{"28":1}}],["无意",{"2":{"31":1}}],["无返回值",{"2":{"28":1}}],["无参",{"2":{"28":1}}],["六种情况",{"2":{"28":1}}],["右边",{"2":{"28":1}}],["左边",{"2":{"28":1}}],["箭头操作符",{"2":{"28":1}}],["或者两者都有",{"2":{"41":1}}],["或",{"2":{"28":1}}],["符号含义",{"2":{"28":1}}],["基本使用",{"0":{"28":1}}],["基本介绍",{"0":{"10":1,"12":1,"17":1,"23":1}}],["这样在变量引用和实际对象间",{"2":{"41":1}}],["这里本意是求出",{"2":{"31":1}}],["这种修改方法没有对原来的类做大的修改",{"2":{"29":1}}],["这些类实现",{"2":{"26":1}}],["这是很没有必要的",{"2":{"16":1}}],["表示接收者",{"2":{"26":1}}],["表达式",{"0":{"19":1},"1":{"24":1,"28":1}}],["引入一个抽象的接口",{"2":{"26":1}}],["引擎",{"2":{"9":1}}],["得到解决思路",{"2":{"26":1}}],["则对应的",{"2":{"26":1}}],["则当这个类需要修改时",{"2":{"18":1}}],["短信等",{"2":{"26":2}}],["我们应当遵守单一职责原则",{"2":{"33":1}}],["我们获取消息的对象不只是电子邮件",{"2":{"26":1}}],["我爱北京故宫",{"2":{"24":1,"28":1}}],["我爱北京天安门",{"2":{"24":1,"28":1}}],["且比较容易想到",{"2":{"26":1}}],["简单",{"2":{"26":1}}],["简介",{"0":{"9":1},"1":{"13":1}}],["完成person接收消息的功能",{"2":{"26":1,"30":1}}],["weixin",{"2":{"26":1,"30":2}}],["world",{"2":{"26":2,"30":4}}],["watervehicle",{"2":{"25":4}}],["hello",{"2":{"26":2,"30":4}}],["generated",{"2":{"36":1}}],["getinfo",{"2":{"26":2,"30":4}}],["gt",{"2":{"11":3,"28":1}}],["extends",{"2":{"31":1}}],["email",{"2":{"26":6,"30":2}}],["effective",{"2":{"15":1}}],["53",{"2":{"29":1}}],["56",{"2":{"26":1}}],["5方法",{"2":{"16":2}}],["采用的是直接实现方式",{"2":{"26":1}}],["见方案3",{"2":{"25":1}}],["改动过大",{"2":{"29":1}}],["改动的代码会比较少",{"2":{"25":1}}],["改进",{"2":{"25":1}}],["直接修改vehicle类",{"2":{"25":1}}],["同时也需要修改客户端",{"2":{"25":1}}],["同时类图的具体实现代码如下所示",{"2":{"16":1}}],["遵守单一职责原则",{"2":{"25":1}}],["遵循里氏替换原则",{"2":{"23":1,"41":1}}],["分析",{"2":{"25":1,"29":1}}],["分解成不同的类",{"2":{"20":1,"25":1}}],["水路运行",{"2":{"25":1}}],["天空运行",{"2":{"25":2}}],["公路运行",{"2":{"25":3}}],["根据依赖倒转原则",{"2":{"30":1}}],["根据方案2中",{"2":{"29":1}}],["根据方案1",{"2":{"25":1}}],["根据不同的交通工具",{"2":{"20":1}}],["方法引用和构造器引用",{"0":{"35":1}}],["方法引用的写法",{"2":{"24":1}}],["方式传递",{"0":{"40":1}}],["方式6",{"2":{"28":1}}],["方式5",{"2":{"28":1}}],["方式4",{"2":{"28":1}}],["方式3",{"2":{"28":1,"40":1}}],["方式2",{"2":{"28":1,"38":1}}],["方式1完成",{"2":{"30":1}}],["方式1",{"2":{"28":1,"36":1}}],["方案3分析",{"2":{"29":1}}],["方案3",{"0":{"29":1},"2":{"29":1}}],["方案",{"0":{"26":1,"30":1}}],["方案2分析",{"2":{"25":1}}],["方案2",{"0":{"25":1},"2":{"25":1,"30":1}}],["方案1",{"0":{"20":1},"2":{"20":1,"26":1}}],["3",{"2":{"31":4}}],["3=14",{"2":{"31":1}}],["3=8",{"2":{"31":1}}],["3=",{"2":{"31":2}}],["32",{"2":{"24":1}}],["3方法",{"2":{"16":2}}],["x3c",{"2":{"24":4,"28":3}}],[">",{"2":{"24":2,"28":2}}],["receiver",{"2":{"30":2}}],["receive",{"2":{"26":2,"30":3}}],["return",{"2":{"24":1,"26":1,"30":2,"31":3}}],["roadvehicle",{"2":{"25":6}}],["r2",{"2":{"24":2,"28":2}}],["r1",{"2":{"24":2,"28":2}}],["runair",{"2":{"29":2}}],["runwater",{"2":{"29":2}}],["runnable",{"2":{"24":3,"28":3}}],["run",{"2":{"20":4,"24":3,"25":6,"28":3,"29":2}}],["由匿名内部类转换到lambda表达式",{"2":{"24":1}}],["由上述类图结合具体实现代码中",{"2":{"16":1}}],["举例",{"0":{"24":1}}],["组合",{"2":{"23":1}}],["那么类型",{"2":{"23":1}}],["时",{"2":{"23":1}}],["都代换成",{"2":{"23":1}}],["都有类型为",{"2":{"23":1}}],["合成复用原则",{"2":{"21":1}}],["迪米特原则",{"2":{"21":1}}],["开关的接口",{"2":{"36":1}}],["开闭原则ocp",{"2":{"21":1}}],["开发工具与jvm带来了大量新特性",{"2":{"9":1}}],["里氏代换原则",{"2":{"21":1}}],["里氏替换原则说明",{"2":{"23":1}}],["里氏替换原则",{"2":{"18":1}}],["原则",{"2":{"21":1}}],["原则的中心思想是",{"2":{"17":1}}],["单一职责原则",{"2":{"21":1}}],["详见方案2",{"2":{"20":1}}],["详情",{"2":{"16":1}}],["将交通工具类的不同",{"2":{"25":1}}],["将该类进行拆分",{"2":{"20":1}}],["将代码像数据一样进行传递",{"2":{"19":1}}],["解决问题",{"2":{"23":1}}],["解决办法",{"2":{"20":1}}],["解决了什么问题",{"2":{"7":1}}],["又负责飞机的运行等",{"2":{"20":1}}],["显然违反了单一职责原则",{"2":{"20":1}}],["轮船",{"2":{"20":1,"25":2,"29":2}}],["+",{"2":{"20":1,"25":3,"29":3,"31":7}}],["交通工具类",{"2":{"20":1}}],["飞机",{"2":{"20":2,"25":2,"29":2}}],["汽车",{"2":{"20":1,"29":2}}],["摩托车",{"2":{"20":2,"25":2}}],["vehicle2",{"2":{"29":7}}],["vehicle",{"2":{"20":9,"25":6,"29":6}}],["void",{"2":{"16":39,"20":2,"24":3,"25":4,"26":2,"28":4,"29":4,"30":2,"31":1,"36":5,"38":5,"40":7}}],["来代表交通工具",{"2":{"20":1}}],["本质",{"2":{"19":1}}],["便是解决编程中",{"2":{"18":1}}],["便于其他程序员阅读和理解",{"2":{"15":1}}],["便于并行",{"2":{"9":1}}],["涉及到子类的功能也有可能会出现故障",{"2":{"18":1}}],["增加对象间的耦合性",{"2":{"18":1}}],["程序稳定性更好",{"2":{"41":1}}],["程序",{"2":{"23":1}}],["程序的可移植性降低",{"2":{"18":1}}],["程序员面临着来自",{"2":{"15":1}}],["比如使用继承会给程序带来侵入性",{"2":{"18":1}}],["也带来了弊端",{"2":{"18":1}}],["继承时",{"2":{"41":1}}],["继承实际上让两个类的耦合性增加了",{"2":{"23":1}}],["继承给程序设计带来遍历的同时",{"2":{"18":1}}],["继承隐含的含义",{"2":{"18":1}}],["父类已经实现好的方法",{"2":{"18":1}}],["把展现的细节的任务交给他们的实现类去完成",{"2":{"17":1}}],["而不涉及任何具体的操作",{"2":{"17":1}}],["而不是依赖一个具体的子类",{"2":{"17":1}}],["细节就是具体的实现类",{"2":{"17":1}}],["细节应该依赖抽象",{"2":{"17":1}}],["中继承的思考和说明",{"0":{"18":1}}],["中",{"2":{"17":1}}],["在水中上运行",{"2":{"29":2}}],["在天空上运行",{"2":{"29":2}}],["在适当的情况下",{"2":{"23":1}}],["在子类中尽量不要重写父类的方法",{"2":{"23":1}}],["在所有的对象",{"2":{"23":1}}],["在公路上运行",{"2":{"20":4,"29":2}}],["在",{"2":{"17":1}}],["在其巨著",{"2":{"15":1}}],["以抽象为基础搭建的架构比以细节为基础搭建的架构要更稳定",{"2":{"17":1}}],["以交通工具运行为例",{"2":{"14":1}}],["相对于细节的多变性",{"2":{"17":1}}],["面向接口编程",{"2":{"17":1}}],["面向对象",{"0":{"18":1},"2":{"11":1}}],["倒置",{"2":{"17":1,"21":1}}],["抽象方法",{"2":{"36":1,"38":1,"40":1}}],["抽象指的是接口或抽象类",{"2":{"17":1}}],["抽象的东西要更稳定",{"2":{"17":1}}],["抽象不应该依赖细节",{"2":{"17":1}}],["抽象类",{"2":{"17":1}}],["如果新增这些类",{"2":{"26":1}}],["如果对每个类型为",{"2":{"23":1}}],["如果一个类被其他的类所继承",{"2":{"18":1}}],["如下所示",{"2":{"20":1,"25":1,"29":1}}],["如何正确使用继承的原则",{"2":{"18":1}}],["如",{"2":{"17":1}}],["如类a负责两个不同的职责",{"2":{"10":1}}],["二者都应该依赖其抽象",{"2":{"17":1}}],["高层模块不应该依赖底层模块",{"2":{"17":1}}],["高内聚",{"2":{"15":1}}],["是类型",{"2":{"23":1}}],["是一个匿名函数",{"2":{"19":1}}],["是指",{"2":{"17":1}}],["是对软件设计中普遍存在",{"2":{"7":1}}],["nums2",{"2":{"31":6}}],["nums1",{"2":{"31":6}}],["new",{"2":{"16":8,"20":1,"24":2,"25":3,"26":2,"28":2,"29":1,"30":3,"31":2,"36":2,"38":2,"40":2}}],["nashorn",{"2":{"9":1}}],["测试",{"2":{"16":1}}],["11+3+9=23",{"2":{"31":1}}],["11+3+9=",{"2":{"31":1}}],["11",{"2":{"31":8}}],["17",{"2":{"30":1}}],["1",{"0":{"26":1},"2":{"30":1,"31":7}}],["12",{"2":{"24":1}}],["18",{"2":{"16":1}}],["15",{"2":{"16":1,"20":1,"25":1,"29":1}}],["16",{"2":{"16":1,"26":2,"30":1,"31":1}}],["this",{"2":{"38":2}}],["tv",{"2":{"36":3,"38":5,"40":6}}],["test3",{"2":{"28":1}}],["test2",{"2":{"24":1}}],["test1",{"2":{"24":1,"28":1}}],["test",{"2":{"24":2,"28":2}}],["t2",{"2":{"23":2}}],["t1",{"2":{"23":3}}],["todo",{"2":{"16":1,"31":1,"36":1}}],["top",{"2":{"16":3,"20":1,"25":1,"26":2,"29":1,"30":2,"31":2}}],["title",{"2":{"16":1,"26":1,"30":1,"31":1}}],["花木凋零成兰",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1}}],["输出结果",{"2":{"16":1,"26":1,"30":1}}],["具体实现代码和结果如下所示",{"2":{"31":1}}],["具体代码",{"2":{"16":1,"26":1,"30":1,"31":1}}],["具有更好的",{"2":{"15":1}}],["保证类a的依赖最小接口",{"2":{"16":1}}],["因此按照接口隔离原则来进行分析",{"2":{"16":1}}],["但是在方法级别上",{"2":{"29":1}}],["但是没有返回值",{"2":{"28":1}}],["但是",{"2":{"26":1}}],["但是改动过大",{"2":{"25":1}}],["但是子类对父类已实现方法随机修改的话",{"2":{"18":1}}],["但是类b必须实现interface1中的所有方法",{"2":{"16":1}}],["但是类a只会使用到interface1中的三个方法",{"2":{"16":1}}],["但是指挥用到1",{"2":{"16":4}}],["47",{"2":{"25":1}}],["44",{"2":{"20":1}}],["4",{"2":{"16":3,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1}}],["20",{"2":{"31":1}}],["2024",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1}}],["21",{"2":{"24":4}}],["22",{"2":{"20":1,"25":1,"29":1}}],["2",{"0":{"30":1},"2":{"16":2}}],["依赖关系传递的三种方式",{"0":{"34":1},"1":{"36":1,"38":1,"40":1}}],["依赖倒转",{"2":{"17":1,"21":1}}],["依赖倒转原则的设计理念",{"2":{"17":1}}],["依赖倒转原则",{"2":{"17":1}}],["依赖",{"2":{"16":4,"23":1}}],["类级别上遵守单一职责原则",{"2":{"29":1}}],["类依赖接口",{"2":{"26":1}}],["类也需要增加对应的接收方法",{"2":{"26":1}}],["类接收消息的功能",{"2":{"22":1}}],["类a通过接口interface1依赖使用类b",{"2":{"16":1}}],["类通过接口interface1",{"2":{"16":4}}],["类库",{"2":{"9":1}}],["实现接口",{"2":{"36":1,"40":1}}],["实现三个对应不同交通工具的方法",{"2":{"29":1}}],["实现代码及输出结果如下所示",{"2":{"26":1,"30":1}}],["实现了",{"2":{"16":22}}],["实例",{"0":{"27":1},"1":{"31":1}}],["实例2",{"2":{"24":1}}],["实例1",{"2":{"24":1}}],["实际上是在设定规范和契约",{"2":{"18":1}}],["实际项目中使用过什么设计模式",{"2":{"7":1}}],["b类继承了a",{"2":{"31":1}}],["b类",{"2":{"16":2}}],["b",{"2":{"16":16,"31":7}}],["itv接口",{"2":{"36":1,"38":1,"40":1}}],["itv",{"2":{"36":4,"38":4,"40":5}}],["iopenandclose",{"2":{"36":2,"38":2,"40":2}}],["ireceiver",{"2":{"26":3,"30":4}}],["int",{"2":{"24":4,"31":9}}],["integer",{"2":{"24":5}}],["integer>",{"2":{"24":4}}],["interface3",{"2":{"16":4}}],["interface2",{"2":{"16":4}}],["interface1",{"2":{"16":14}}],["interface",{"2":{"16":4,"30":1,"36":2,"38":2,"40":2}}],["inversion",{"2":{"17":1}}],["improve",{"2":{"16":1,"30":2}}],["implements",{"2":{"16":4,"30":2,"36":2,"38":2,"40":2}}],["i",{"2":{"16":24}}],["idea工具熟练",{"2":{"4":1}}],["接收接口",{"2":{"36":1}}],["接收消息",{"2":{"26":1}}],["接口传递",{"0":{"36":1}}],["接口即可",{"2":{"26":1}}],["接口隔离原则",{"2":{"21":1}}],["接口3",{"2":{"16":1}}],["接口2",{"2":{"16":1}}],["接口1",{"2":{"16":1}}],["接口",{"0":{"32":1},"2":{"16":1,"17":1}}],["接受维护项目",{"2":{"7":1}}],["play",{"2":{"36":3,"38":3,"40":3}}],["p",{"2":{"23":2}}],["person",{"2":{"22":1,"26":7,"30":6}}],["println",{"2":{"16":16,"20":1,"24":7,"25":3,"26":1,"28":6,"29":3,"30":1,"31":6,"36":1,"38":1,"40":1}}],["principle",{"2":{"16":3,"17":1,"20":1,"25":1,"26":2,"29":1,"30":2,"31":2}}],["public",{"2":{"16":31,"20":3,"24":4,"25":5,"26":4,"28":4,"29":5,"30":6,"31":5,"36":4,"38":6,"40":1}}],["package",{"2":{"16":3,"20":1,"25":1,"26":2,"29":1,"30":2,"31":2}}],["ytazwc",{"2":{"16":3,"20":1,"25":1,"26":2,"29":1,"30":2,"31":2}}],["点击查看代码",{"2":{"36":1,"38":1,"40":1}}],["点击查看",{"2":{"16":1}}],["若对类图理解不够清楚",{"2":{"16":1}}],["首先查看下面的uml类图",{"2":{"16":1}}],["就存在一个缓冲层",{"2":{"41":1}}],["就是接口的实例",{"2":{"19":1}}],["就是一个线程上",{"2":{"13":1}}],["就曾经说过",{"2":{"15":1}}],["changhong",{"2":{"36":4,"38":4,"40":4}}],["con1",{"2":{"28":2}}],["con",{"2":{"28":2}}],["consumer",{"2":{"28":3}}],["concurrent在并发编程中使用的工具包",{"2":{"3":1}}],["com3",{"2":{"24":2}}],["com2",{"2":{"24":2}}],["compare3",{"2":{"24":2}}],["compare2",{"2":{"24":2}}],["compare1",{"2":{"24":2}}],["compare",{"2":{"24":7}}],["comparator",{"2":{"24":4}}],["com1",{"2":{"24":2}}],["c类通过接口去依赖d类",{"2":{"16":1}}],["c",{"2":{"16":10}}],["class",{"2":{"16":10,"20":2,"25":4,"26":3,"29":2,"30":4,"31":3,"36":3,"38":3,"40":3}}],["c++新手的区别就是前者手背上有很多伤疤",{"2":{"15":1}}],["c++老手和",{"2":{"15":1}}],["c++",{"2":{"15":1}}],["method",{"2":{"36":1}}],["main",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1,"36":1,"38":1,"40":1}}],["mayers",{"2":{"15":1}}],["mysql是怎样运行的",{"2":{"2":1}}],["settv",{"2":{"40":3}}],["setter",{"0":{"40":1}}],["segregation1",{"2":{"16":3}}],["segregation",{"2":{"16":3}}],["s",{"2":{"28":4}}],["singleresponsibility3",{"2":{"29":1}}],["singleresponsibility2",{"2":{"25":1}}],["singleresponsibility1",{"2":{"20":1}}],["singleresponsibility",{"2":{"20":1,"25":1,"29":1}}],["stub",{"2":{"36":1}}],["string>",{"2":{"28":3}}],["string",{"2":{"16":1,"20":2,"25":4,"26":2,"28":1,"29":4,"30":4,"31":1,"36":1,"38":1,"40":1}}],["stream",{"0":{"37":1},"2":{"9":1}}],["static",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1,"36":1,"38":1,"40":1}}],["system",{"2":{"16":16,"20":1,"24":7,"25":3,"26":1,"28":6,"29":3,"30":1,"31":6}}],["scott",{"2":{"15":1}}],["的和",{"2":{"31":1}}],["的子类型",{"2":{"23":1}}],["的行为没有发生变化",{"2":{"23":1}}],["的对象",{"2":{"23":2}}],["的精要",{"2":{"15":1}}],["的各种问题",{"2":{"7":1}}],["description",{"2":{"16":1,"26":1,"30":1,"31":1}}],["dependencypass",{"2":{"36":1,"38":1,"40":1}}],["dependencyinversion",{"2":{"26":3,"30":4}}],["dependence",{"2":{"17":1}}],["dependecyinversion",{"2":{"26":1}}],["depend5",{"2":{"16":3}}],["depend4",{"2":{"16":3}}],["depend3",{"2":{"16":3}}],["depend2",{"2":{"16":3}}],["depend1",{"2":{"16":6}}],["date",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1}}],["d类",{"2":{"16":2}}],["d",{"2":{"15":1,"16":16}}],["你就懂了面向对象分析和设计",{"2":{"15":1}}],["懂了设计模式",{"2":{"15":1}}],["金句",{"2":{"15":1}}],["低耦合的特性",{"2":{"15":1}}],["使得以",{"2":{"23":1}}],["使用一个类",{"2":{"20":1}}],["使用lambda表达式可以写出更简洁更灵活的代码",{"2":{"19":1}}],["使用接口或抽象类的目的是制定好规范",{"2":{"17":1}}],["使用",{"2":{"16":4,"28":1}}],["使用到多种设计模式",{"2":{"11":1}}],["使程序呈现",{"2":{"15":1}}],["对方案",{"2":{"30":1}}],["对类分解的同时",{"2":{"29":1}}],["对类来说",{"2":{"10":1}}],["对于属于接收消息范围的",{"2":{"26":1}}],["对于类c也是同理",{"2":{"16":1}}],["对该方案进行分析",{"2":{"26":1}}],["对原来功能没有影响",{"2":{"15":1}}],["当增加新的功能时",{"2":{"15":1}}],["当职责1需求变更而改变a时",{"2":{"10":1}}],["非常方便",{"2":{"15":1}}],["不用多次编写",{"2":{"15":1}}],["代码运行结果如下",{"2":{"29":1}}],["代码重用性",{"2":{"15":1}}],["代码更少",{"2":{"9":1}}],["软件",{"2":{"15":1}}],["软件工程中",{"2":{"7":1}}],["灵活性等多方面的挑战",{"2":{"15":1}}],["内聚性及可维护性",{"2":{"15":1}}],["耦合性",{"2":{"15":1}}],["编写软件过程中",{"2":{"15":1}}],["编译器",{"2":{"9":1}}],["应用实例",{"0":{"14":1,"16":1,"22":1},"1":{"20":1,"25":1,"26":1,"29":1,"30":1}}],["从上到下运行程序",{"2":{"13":1}}],["串行流",{"2":{"13":1}}],["并且修改后",{"2":{"18":1}}],["并用不同的线程分别处理每个数据块的流",{"2":{"13":1}}],["并行流就是把一个内容分为多个数据块",{"2":{"13":1}}],["并行流和串行流",{"0":{"13":1}}],["服务器集群",{"2":{"11":1}}],["架构",{"2":{"11":1}}],["框架",{"2":{"11":1}}],["功能模块",{"2":{"11":1}}],["=",{"2":{"11":3,"16":2,"20":1,"24":8,"25":3,"26":1,"28":4,"29":1,"30":1,"31":2,"36":2,"38":3,"40":3}}],["override",{"2":{"24":2,"28":2,"30":2,"36":1,"38":1,"40":1}}],["o2",{"2":{"23":2,"24":4}}],["o1",{"2":{"23":2,"24":4}}],["out",{"2":{"16":16,"20":1,"24":7,"25":3,"26":1,"28":6,"29":3,"30":1,"31":6,"36":1,"38":1,"40":1}}],["open",{"2":{"36":3,"38":3,"40":3}}],["openandclose",{"2":{"36":3,"38":4,"40":3}}],["operation5",{"2":{"16":11}}],["operation4",{"2":{"16":11}}],["operation3",{"2":{"16":11}}],["operation2",{"2":{"16":11}}],["operation1",{"2":{"16":16}}],["optional类",{"0":{"39":1},"2":{"9":1}}],["ooa",{"2":{"15":1}}],["oo",{"0":{"18":1},"2":{"11":1}}],["auto",{"2":{"36":1}}],["author",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1}}],["a类",{"2":{"31":1}}],["a类通过接口去依赖b类",{"2":{"16":1}}],["accept",{"2":{"28":3}}],["airvehicle",{"2":{"25":5}}],["args",{"2":{"16":1,"20":1,"25":1,"26":1,"29":1,"30":1,"31":1,"36":1,"38":1,"40":1}}],["a",{"2":{"16":10,"31":7}}],["a2",{"2":{"10":1}}],["api",{"0":{"37":1},"2":{"9":1}}],["所有的引用基类的地方必须能透明的使用其子类的对象",{"2":{"23":1}}],["所以根据依赖倒转原则进行分析",{"2":{"26":1}}],["所以我们可以将接口interface1拆分为几个接口",{"2":{"16":1}}],["所以需要将类a的粒度分解为a1",{"2":{"10":1}}],["所提出的解决方案",{"2":{"7":1}}],["可维护性",{"2":{"33":1}}],["可能是",{"2":{"31":1}}],["可能还以为调用的是父类的func1方法",{"2":{"31":1}}],["可能意识的重写了父类的方法",{"2":{"31":1}}],["可能会对整个继承体系造成破坏",{"2":{"18":1}}],["可能造成职责2执行错误",{"2":{"10":1}}],["可以通过聚合",{"2":{"23":1}}],["可以把lambda表达式理解为一段可以传递的代码",{"2":{"19":1}}],["可以发现",{"2":{"16":1}}],["可以查看下面的实现代码",{"2":{"16":1}}],["可以很大程度上提高程序的执行效率",{"2":{"13":1}}],["可靠性",{"2":{"15":1}}],["可扩展性",{"2":{"15":1}}],["可读性",{"2":{"7":1,"15":1}}],["职责1和职责2",{"2":{"10":1}}],["即求",{"2":{"31":1}}],["即在使用继承的过程中",{"2":{"31":1}}],["即在使用继承时",{"2":{"23":1}}],["即重写的抽象方法的方法体",{"2":{"28":1}}],["即接口中的抽象方法的形参列表",{"2":{"28":1}}],["即符合依赖倒转原则",{"2":{"26":1}}],["即有细节依赖抽象",{"2":{"26":1}}],["即将类分解",{"2":{"25":1}}],["即负责摩托车在公路上",{"2":{"20":1}}],["即",{"2":{"18":1,"23":1}}],["即可以得到以下类图",{"2":{"16":1}}],["即增加新的功能时",{"2":{"15":1}}],["即编程规范",{"2":{"15":1}}],["即相同功能的代码",{"2":{"15":1}}],["即一个类对另外一个类的依赖应该建立在更小的接口上",{"2":{"12":1}}],["即一个类应该只负责一项职责",{"2":{"10":1}}],["即维护性",{"2":{"7":1}}],["允许jvm上运行js应用",{"2":{"9":1}}],["最大化减少空指针异常",{"2":{"9":1}}],["速度更快",{"2":{"9":1}}],["为java语言",{"2":{"9":1}}],["怎么使用的",{"2":{"7":1}}],["大厂提问",{"2":{"7":1}}],["规范性",{"2":{"7":1}}],["目前程序员门槛越来越高",{"2":{"7":1}}],["反复出现",{"2":{"7":1}}],["设计模式常用七大原则",{"0":{"21":1}}],["设计模式包含了面向对象的精髓",{"2":{"15":1}}],["设计模式是为了让程序",{"2":{"15":1}}],["设计模式的目的",{"0":{"15":1}}],["设计模式的重要性",{"0":{"7":1}}],["设计模式+数据结构",{"2":{"11":1}}],["设计模式在软件中哪里",{"0":{"11":1}}],["设计模式",{"2":{"7":1}}],["图解+框架源码剖析",{"2":{"6":1}}],["尚硅谷java设计模式",{"2":{"6":1}}],["主要为学习各种开发技术专用",{"2":{"5":1}}],["介绍",{"0":{"5":1}}],["有一定线程",{"2":{"4":1}}],["有java基础",{"2":{"4":1}}],["了解java新特性",{"2":{"4":1}}],["前置知识",{"0":{"4":1}}],["util",{"2":{"3":1}}],["java8",{"2":{"9":1}}],["java8新特性",{"2":{"4":1}}],["java",{"2":{"3":1,"17":1}}],["juc入门",{"2":{"4":1}}],["juc是什么",{"0":{"3":1}}],["juc并发编程",{"2":{"1":1}}],["指",{"2":{"3":1}}],["学习书籍",{"0":{"2":1,"8":1}}],["学习视频",{"0":{"1":1,"6":1}}],["画类图",{"0":{"0":1}}]],"serializationVersion":2}';export{t as default};
