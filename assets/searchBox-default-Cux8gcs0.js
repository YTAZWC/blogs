const t='{"documentCount":11,"nextId":11,"documentIds":{"0":"/article/8hj4986b/#_70-爬楼梯","1":"/article/8hj4986b/#test","2":"/leetcode/9zwd89jw/#_70-爬楼梯","3":"/leetcode/c60ue2yp/#_76-最小覆盖子串","4":"/article/8hj4986b/#解法一-动态规划","5":"/leetcode/9zwd89jw/#解法一-动态规划","6":"/leetcode/c60ue2yp/#解法一-滑动窗口","7":"/article/8hj4986b/#解法二-状态压缩","8":"/leetcode/9zwd89jw/#解法二-状态压缩","9":"/leetcode/c60ue2yp/#优化-哈希表","10":"/learn/#介绍"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,25],"1":[1,1,1],"2":[2,1,25],"3":[2,1,60],"4":[3,1,80],"5":[3,1,80],"6":[3,1,150],"7":[3,1,57],"8":[3,1,57],"9":[3,1,113],"10":[1,1,2]},"averageFieldLength":[2.3636363636363638,1,59.09090909090909],"storedFields":{"0":{"title":"70.爬楼梯","titles":[]},"1":{"title":"test","titles":[]},"2":{"title":"70.爬楼梯","titles":[null]},"3":{"title":"76. 最小覆盖子串","titles":[]},"4":{"title":"解法一(动态规划)","titles":["test"]},"5":{"title":"解法一(动态规划)","titles":[null]},"6":{"title":"解法一(滑动窗口)","titles":[]},"7":{"title":"解法二(状态压缩)","titles":[]},"8":{"title":"解法二(状态压缩)","titles":[null]},"9":{"title":"优化(+哈希表)","titles":[]},"10":{"title":"介绍","titles":[null]}},"dirtCount":0,"index":[["主要为学习各种开发技术专用",{"2":{"10":1}}],["介绍",{"0":{"10":1}}],["便于将该字符排除时不会误判",{"2":{"9":1}}],["但仍需记录下该字符的数目",{"2":{"9":1}}],["但是需要注意窗口区间",{"2":{"9":1}}],["但是这会增加对于哈希表的操作",{"2":{"9":1}}],["相等时不用再让distance+1",{"2":{"9":1}}],["让distance+1",{"2":{"9":1}}],["让代码更加简洁",{"2":{"9":1}}],["每当子串中多一个属于t的字符",{"2":{"9":1}}],["每次你可以爬",{"2":{"0":1,"2":1}}],["在不需要考虑字符之间顺序的情况下",{"2":{"9":1}}],["在移动右边界",{"2":{"6":1}}],["总结",{"2":{"9":1}}],["80",{"2":{"9":1}}],["6",{"2":{"9":1}}],["equals",{"2":{"9":1}}],["get",{"2":{"9":2}}],["getordefault",{"2":{"9":5}}],["变化",{"2":{"9":1}}],["更简洁",{"2":{"9":1}}],["用于记录更新最小子串长度",{"2":{"9":1}}],["用于统计s的子串包含多少字符串t中的字符",{"2":{"6":1}}],["put",{"2":{"9":3}}],["public",{"2":{"4":1,"5":1,"6":1,"9":1}}],["先对字符t进行统计",{"2":{"9":1}}],["先将字符串t包含的字符及其数量进行统计",{"2":{"6":1}}],[">",{"2":{"9":2}}],["hashmap",{"2":{"9":4}}],["字符串t的长度",{"2":{"9":1}}],["字符串t不包含该字符",{"2":{"6":1}}],["字符串s的长度",{"2":{"9":1}}],["此处未省略",{"2":{"9":1}}],["此时窗口区间为",{"2":{"6":1,"9":1}}],["此时移动左边界",{"2":{"6":1}}],["首先考虑字符频数数组",{"2":{"9":1}}],["首先需要遍历字符串t",{"2":{"6":1}}],["优化思路",{"2":{"9":1}}],["优化",{"0":{"9":1}}],["状态转移",{"2":{"7":1,"8":1}}],["状态压缩",{"0":{"7":1,"8":1}}],["初始状态",{"2":{"7":1,"8":1}}],["得知下一个状态由可表达的两个状态得出",{"2":{"7":1,"8":1}}],["函数内部需要遍历一次",{"2":{"6":1}}],["同时可以省略一些判断",{"2":{"9":1}}],["同时将字符串s转换为字符串数组",{"2":{"6":1}}],["同时重点需要考虑的是",{"2":{"6":1}}],["统计其中字符及数量",{"2":{"6":1}}],["统计该字符",{"2":{"6":1}}],["|t|",{"2":{"6":2}}],["|s|",{"2":{"6":2}}],["||",{"2":{"4":1,"5":1,"7":1,"8":1}}],["4",{"2":{"7":1,"8":1}}],["43",{"2":{"6":1,"9":1}}],["451≤n≤45",{"2":{"0":1,"2":1}}],["\\t",{"2":{"7":2,"8":2}}],["\\tpublic",{"2":{"7":1,"8":1}}],["\\t内存消耗",{"2":{"6":1,"9":1}}],["\\t执行耗时",{"2":{"6":1,"9":1}}],["\\t\\treturn",{"2":{"4":1,"5":1,"7":1,"8":1}}],["\\t\\t",{"2":{"4":1,"5":1,"7":2,"8":2}}],["\\t\\t\\tb",{"2":{"7":1,"8":1}}],["\\t\\t\\ta",{"2":{"7":1,"8":1}}],["\\t\\t\\tans",{"2":{"7":1,"8":1}}],["\\t\\t\\tdp",{"2":{"4":1,"5":1}}],["\\t\\t\\treturn",{"2":{"4":1,"5":1,"7":1,"8":1}}],["\\t\\tfor",{"2":{"4":1,"5":1,"7":1,"8":1}}],["\\t\\tdp",{"2":{"4":2,"5":2}}],["\\t\\tint",{"2":{"4":1,"5":1,"7":2,"8":2}}],["\\t\\tif",{"2":{"4":1,"5":1,"7":1,"8":1}}],["return",{"2":{"6":2,"9":2}}],["right++",{"2":{"6":1}}],["right",{"2":{"6":11,"9":6}}],["移动左边界",{"2":{"6":1}}],["移动右指针",{"2":{"6":1}}],["排除该字符",{"2":{"6":1}}],["左边界移动导致子串不再完全包含字符串t中的字符",{"2":{"6":1}}],["左边界开始移动",{"2":{"6":1}}],["与右边界移动循环判断处对应",{"2":{"6":1}}],["保证窗口区间为",{"2":{"6":1}}],["可将该字符排除",{"2":{"6":1}}],["可以使用一个变量distance来记录",{"2":{"9":1}}],["可以使用滑动窗口来解决",{"2":{"6":1}}],["可以减少很多不必要的比较和操作",{"2":{"9":1}}],["可以省略部分时间和空间",{"2":{"9":1}}],["可以简单得出",{"2":{"4":1,"5":1}}],["可以由第i",{"2":{"4":1,"5":1}}],["该判断可省略",{"2":{"6":2}}],["该字符被排除",{"2":{"6":1}}],["该字符不再令dishtance增加",{"2":{"6":1}}],["直接移动",{"2":{"6":1}}],["直接继续添加下一位字符",{"2":{"6":1}}],["直到在子串中该字符的数目已经等于或大于在t中的字符数目时",{"2":{"6":1}}],["直到为覆盖字符串t的最小长度",{"2":{"6":1}}],["while",{"2":{"6":2,"9":1}}],["定义窗口左边界",{"2":{"9":1}}],["定义窗口左右端点",{"2":{"6":1}}],["定义区间为",{"2":{"6":1}}],["distance++",{"2":{"6":1}}],["distance",{"2":{"6":3,"9":4}}],["dp",{"2":{"4":8,"5":8}}],["value",{"2":{"6":2,"9":2}}],["记录子串包含字符串t字符的字符数",{"2":{"9":1}}],["记录最小子串起始索引",{"2":{"9":1}}],["记录s最小子串的起始索引",{"2":{"6":1}}],["记录s最小子串的长度",{"2":{"6":1}}],["记录字符串t的字符频数",{"2":{"6":1,"9":1}}],["记录字符串s的字符频数",{"2":{"6":1,"9":1}}],["for",{"2":{"6":1,"9":2}}],["进行统计",{"2":{"6":1}}],["进阶",{"2":{"3":1}}],["将字符串转化为字符数组",{"2":{"6":1}}],["将子串长度减小",{"2":{"6":1}}],["获取字符串t的长度",{"2":{"6":1}}],["获取字符串s的长度",{"2":{"6":1}}],["否则则将满足条件的子串返回",{"2":{"6":1}}],["否则无法得到正确的当前状态dp",{"2":{"4":1,"5":1}}],["使用for循环代替while",{"2":{"9":1}}],["使用变量a和b来表示需要的两个状态",{"2":{"7":1,"8":1}}],["使用变量ans来表示下一个需要得到的状态",{"2":{"7":1,"8":1}}],["使用begin来记录最小子串的起始索引",{"2":{"6":1}}],["使用minlen来记录最小子串长度",{"2":{"6":1}}],["使用数组swin进行统计",{"2":{"6":1}}],["使用数组tnum进行统计",{"2":{"6":1}}],["令distance",{"2":{"6":1}}],["说明子串不再完全包含字符串t中字符",{"2":{"6":1}}],["子串中该字符数目等于t中该字符数目时",{"2":{"6":1}}],["若字符不在t中",{"2":{"9":1}}],["若minlen未发生改变",{"2":{"6":1}}],["若minlen等于初始值",{"2":{"6":1}}],["若排除该字符前",{"2":{"6":1}}],["若直接使用统计的子串字符及数量和t的统计进行对比",{"2":{"6":1}}],["时",{"2":{"6":1,"9":1}}],["时间复杂度分析",{"2":{"6":1}}],["时间复杂度",{"2":{"4":1,"5":1,"7":1,"8":1}}],["时间内解决此问题的算法吗",{"2":{"3":1}}],["则跳过记录到哈希中的步骤",{"2":{"9":1}}],["则没有符合条件的子串",{"2":{"6":1}}],["则窗口长度为",{"2":{"6":1}}],["则说明不存在子串满足条件",{"2":{"6":1}}],["则说明子串已经覆盖了字符串t",{"2":{"6":1}}],["则令distance++",{"2":{"6":1}}],["则返回空字符串",{"2":{"3":1}}],["当然对于distance的增加",{"2":{"9":1}}],["当distance",{"2":{"9":1}}],["当s的子串包含字符串t的所有字符时",{"2":{"6":1}}],["当子串中包含该字符数少于字符串t时",{"2":{"6":1}}],["当子串增加了一个在t中的字符时",{"2":{"6":1}}],["当移动左边界时",{"2":{"6":1}}],["当右边界字符不在字符串t中时",{"2":{"6":1}}],["当左边界排除了一个在t中的字符时",{"2":{"6":1}}],["当找到覆盖t的子串时",{"2":{"6":1}}],["对",{"2":{"6":1}}],["对时间消耗很大",{"2":{"6":1}}],["对于一个字符串是否包含另外一个字符串",{"2":{"9":1}}],["对于窗口区间确认为",{"2":{"6":1}}],["对于到第二阶方法",{"2":{"4":1,"5":1}}],["对于到第一阶台阶",{"2":{"4":1,"5":1}}],["对于多个子问题",{"2":{"4":1,"5":1}}],["对于",{"2":{"3":1}}],["也需要考虑每个字符对应的数量",{"2":{"9":1}}],["也需要进行遍历对比",{"2":{"6":1}}],["也可以由第i",{"2":{"4":1,"5":1}}],["如何确认s的子串是否已经覆盖了字符串t",{"2":{"6":1}}],["如果",{"2":{"3":2}}],["再移动左边界",{"2":{"6":1}}],["寻找包含字符串t的s子串",{"2":{"6":1}}],["通过移动窗口右边界",{"2":{"6":1}}],["考虑暴力解法会超时",{"2":{"6":1}}],["滑动窗口",{"0":{"6":1}}],["空间复杂度分析",{"2":{"6":1}}],["空间复杂度",{"2":{"4":1,"5":1,"7":1,"8":1}}],["复杂度分析",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1}}],["击败了13",{"2":{"9":1}}],["击败了100",{"2":{"4":1,"5":1,"7":1,"8":1}}],["击败了70",{"2":{"9":1}}],["击败了47",{"2":{"7":1,"8":1}}],["击败了64",{"2":{"6":1}}],["击败了99",{"2":{"6":1}}],["击败了5",{"2":{"4":1,"5":1}}],["5",{"2":{"4":1,"5":1}}],["内存消耗",{"2":{"4":1,"5":1,"7":1,"8":1}}],["08",{"2":{"7":1,"8":1}}],["00",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1}}],["0",{"2":{"4":1,"5":1,"6":7,"7":2,"8":2,"9":10}}],["执行耗时",{"2":{"4":1,"5":1,"7":1,"8":1}}],["提交结果如下",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["提示",{"2":{"0":1,"2":1,"3":1}}],["x3c",{"2":{"4":1,"5":1,"6":4,"7":1,"8":1,"9":8}}],["实现代码如下",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["确定是否符合思路与题意",{"2":{"4":1,"5":1}}],["确定dp数组以及下标含义",{"2":{"4":1,"5":1}}],["打印dp数组",{"2":{"4":1,"5":1}}],["由解法一得到的状态转移方程",{"2":{"7":1,"8":1}}],["由一种方法",{"2":{"4":1,"5":1}}],["由英文字母组成",{"2":{"3":1}}],["然后窗口左右边界最极端情况下需要各自遍历一遍",{"2":{"6":1}}],["然后在寻找字串的过程中逐步统计子串中包含的字符及其数量",{"2":{"6":1}}],["然后确定遍历顺序",{"2":{"4":1,"5":1}}],["然后确定dp数组的初始化",{"2":{"4":1,"5":1}}],["然后推导递推公式",{"2":{"4":1,"5":1}}],["到达第i",{"2":{"4":1,"5":1}}],["即说明此时已包含字符串t",{"2":{"9":1}}],["即可以对状态数组进行压缩",{"2":{"7":1,"8":1}}],["即子串保存t中字符数加一",{"2":{"6":1}}],["即子串长度为right",{"2":{"6":1}}],["即swin",{"2":{"6":1,"9":1}}],["即从i=3开始遍历到i=n",{"2":{"4":1,"5":1}}],["即状态转移方程为",{"2":{"4":1,"5":1}}],["即到达第i个台阶的方法为",{"2":{"4":1,"5":1}}],["即若要到达第i个台阶",{"2":{"4":1,"5":1}}],["即dp",{"2":{"4":2,"5":2}}],["因此当distance",{"2":{"6":1}}],["因此使用一个变量distance来确认子串是否已经包含了t中的字符",{"2":{"6":1}}],["因此没有符合条件的子字符串",{"2":{"3":1}}],["因为integer引用类型变量",{"2":{"9":1}}],["因为状态转移方程需要先得到状态dp",{"2":{"4":1,"5":1}}],["因为一次可以爬1或2个台阶",{"2":{"4":1,"5":1}}],["表示第i个台阶",{"2":{"4":1,"5":1}}],["if",{"2":{"6":6,"9":6}}],["integer>",{"2":{"9":2}}],["integer",{"2":{"6":2,"9":2}}],["int",{"2":{"4":4,"5":4,"6":12,"7":3,"8":3,"9":8}}],["i",{"2":{"4":13,"5":13,"6":3,"7":3,"8":3,"9":3}}],["按照动规五部曲进行求解",{"2":{"4":1,"5":1}}],["采用动态规划算法",{"2":{"4":1,"5":1}}],["思路分析",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1}}],["动态规划",{"0":{"4":1,"5":1}}],["解法二",{"0":{"7":1,"8":1}}],["解法一",{"0":{"4":1,"5":1,"6":1}}],["解答成功",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["解释",{"2":{"0":2,"2":2,"3":3}}],["o",{"2":{"3":1,"4":6,"5":6,"6":2,"7":6,"8":6}}],["你能设计一个在",{"2":{"3":1}}],["你有多少种不同的方法可以爬到楼顶呢",{"2":{"0":1,"2":1}}],["lt",{"2":{"3":2}}],["left+1",{"2":{"9":1}}],["left",{"2":{"6":15,"9":7}}],["length",{"2":{"3":2,"6":3,"9":3}}],["leq",{"2":{"0":2,"2":2}}],["max",{"2":{"6":2,"9":2}}],["minlen",{"2":{"6":4,"9":4}}],["minwindow",{"2":{"6":1,"9":1}}],["mb",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["ms",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["m+n",{"2":{"3":1}}],["m",{"2":{"3":2}}],["均应包含在",{"2":{"3":1}}],["是最小覆盖子串",{"2":{"3":1}}],["整个字符串",{"2":{"3":1}}],["containskey",{"2":{"9":2}}],["continue",{"2":{"6":2,"9":2}}],["ch",{"2":{"9":3}}],["chl",{"2":{"6":5,"9":6}}],["chr",{"2":{"6":5,"9":7}}],["character",{"2":{"9":2}}],["charat",{"2":{"6":3,"9":3}}],["char",{"2":{"6":3,"9":3}}],["climbstairs",{"2":{"4":1,"5":1,"7":1,"8":1}}],["class",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["c",{"2":{"3":1}}],["和dp",{"2":{"4":1,"5":1}}],["和",{"2":{"3":2}}],["begin+minlen",{"2":{"6":1,"9":1}}],["begin",{"2":{"6":3,"9":3}}],["b",{"2":{"3":1,"7":3,"8":3}}],["banc",{"2":{"3":2}}],["的java用户",{"2":{"4":2,"5":2,"6":2,"7":2,"8":2,"9":2}}],["的子串中",{"2":{"3":1}}],["的",{"2":{"3":1}}],["包含来自字符串",{"2":{"3":1}}],["ans",{"2":{"7":3,"8":3}}],["aa",{"2":{"3":1}}],["a",{"2":{"3":6,"7":2,"8":2}}],["abc",{"2":{"3":1}}],["adobecodebanc",{"2":{"3":1}}],["我们可以使用哈希表来统计字符频数",{"2":{"9":1}}],["我们保证它是唯一的答案",{"2":{"3":1}}],["我们寻找的子字符串中该字符数量必须不少于",{"2":{"3":1}}],["注意此处判断不能使用",{"2":{"9":1}}],["注意",{"2":{"3":1}}],["quot",{"2":{"3":2}}],["所有字符的子串",{"2":{"3":1}}],["所有字符的最小子串",{"2":{"3":1}}],["中的字符数目",{"2":{"6":1}}],["中两个字符",{"2":{"3":1}}],["中存在这样的子串",{"2":{"3":1}}],["中该字符数量",{"2":{"3":1}}],["中重复字符",{"2":{"3":1}}],["中不存在涵盖",{"2":{"3":1}}],["中涵盖",{"2":{"3":1}}],["返回空字符串",{"2":{"3":1,"6":1}}],["返回",{"2":{"3":1}}],["thash",{"2":{"9":7}}],["tochararray",{"2":{"6":1}}],["tlen",{"2":{"6":3,"9":3}}],["tnum",{"2":{"6":7}}],["t",{"2":{"3":12,"6":5,"9":4}}],["test",{"0":{"1":1},"1":{"4":1}}],["一个字符串",{"2":{"3":1}}],["shash",{"2":{"9":7}}],["substring",{"2":{"6":1,"9":1}}],["schararray",{"2":{"6":3}}],["swin",{"2":{"6":5}}],["slen",{"2":{"6":2,"9":2}}],["string",{"2":{"6":3,"9":3}}],["solution",{"2":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}}],["s",{"2":{"3":11,"6":6,"9":5}}],["给你一个字符串",{"2":{"3":1}}],["最小覆盖子串",{"0":{"3":1},"2":{"3":1}}],["76",{"0":{"3":1}}],["70",{"0":{"0":1,"2":1}}],["有两种方法",{"2":{"4":1,"5":1}}],["有两种方法可以爬到楼顶",{"2":{"0":1,"2":1}}],["有多少种方法可以爬到",{"2":{"4":1,"5":1}}],["有三种方法可以爬到楼顶",{"2":{"0":1,"2":1}}],["39",{"2":{"4":1,"5":1,"7":1,"8":1}}],["3",{"2":{"0":2,"2":2,"3":1,"4":1,"5":1,"7":1,"8":1}}],["+哈希表",{"0":{"9":1}}],["++right",{"2":{"9":1}}],["++i",{"2":{"6":1,"9":1}}],["++",{"2":{"4":1,"5":1,"6":5,"7":1,"8":1,"9":4}}],["+",{"2":{"0":5,"2":5,"4":2,"5":2,"6":2,"7":1,"8":1,"9":3}}],["阶",{"2":{"0":10,"2":10}}],["阶你才能到达楼顶",{"2":{"0":1,"2":1}}],["输出",{"2":{"0":2,"2":2,"3":3}}],["输入",{"2":{"0":2,"2":2,"3":3}}],["==比较的是引用而非内容",{"2":{"9":1}}],["==",{"2":{"3":2,"4":2,"5":2,"6":7,"7":2,"8":2,"9":4}}],["=",{"2":{"0":2,"2":2,"3":8,"4":9,"5":9,"6":15,"7":8,"8":8,"9":15}}],["示例",{"2":{"0":2,"2":2,"3":3}}],["个台阶",{"2":{"0":1,"2":1}}],["23",{"2":{"6":1}}],["28",{"2":{"4":1,"5":1}}],["2个台阶方法的总和",{"2":{"4":1,"5":1}}],["2个台阶爬2个台阶到达",{"2":{"4":1,"5":1}}],["2",{"2":{"0":7,"2":7,"3":1,"4":8,"5":8,"6":1,"7":2,"8":2}}],["或",{"2":{"0":1,"2":1}}],["19",{"2":{"9":1}}],["13",{"2":{"9":1}}],["128",{"2":{"6":2}}],["1个台阶的方法和到第i",{"2":{"4":1,"5":1}}],["1个台阶爬1个台阶到达",{"2":{"4":1,"5":1}}],["10^5",{"2":{"3":1}}],["1≤n≤451",{"2":{"0":1,"2":1}}],["1",{"2":{"0":9,"2":9,"3":2,"4":8,"5":8,"7":5,"8":5,"9":4}}],["n+1",{"2":{"4":1,"5":1}}],["new",{"2":{"4":1,"5":1,"6":2,"9":2}}],["n",{"2":{"0":4,"2":4,"3":2,"4":12,"5":12,"7":8,"8":8}}],["需要",{"2":{"0":1,"2":1}}],["假设你正在爬楼梯",{"2":{"0":1,"2":1}}],["爬楼梯",{"0":{"0":1,"2":1}}]],"serializationVersion":2}';export{t as default};
