const e='{"documentCount":91,"nextId":91,"documentIds":{"0":"/article/wlhley8t/#画类图","1":"/dubbo/grgvjnyc/#项目架构目标","2":"/dubbo/5uam9nql/#概念","3":"/dubbo/grgvjnyc/#集群和分布式","4":"/dubbo/5uam9nql/#架构","5":"/dubbo/grgvjnyc/#架构演进","6":"/java-concurrent/#学习视频","7":"/mysql-learn/#学习书籍","8":"/dubbo/grgvjnyc/#单体结构","9":"/java-concurrent/#juc是什么","10":"/zookeeper/wz9jt6uj/#概述","11":"/dubbo/grgvjnyc/#垂直架构","12":"/java-concurrent/#前置知识","13":"/zookeeper/wz9jt6uj/#工作机制","14":"/learn/#介绍","15":"/dubbo/grgvjnyc/#分布式架构","16":"/zookeeper/wz9jt6uj/#应用场景","17":"/design-pattern/#学习视频","18":"/design-pattern/biychupa/#设计模式的重要性","19":"/dubbo/grgvjnyc/#soa架构","20":"/zookeeper/wz9jt6uj/#统一命名服务","21":"/design-pattern/#学习书籍","22":"/article/adrm6moe/#简介","23":"/dubbo/yq1jcth3/#创建项目和模块","24":"/design-pattern/biychupa/#设计模式在软件中哪里","25":"/dubbo/grgvjnyc/#微服务架构","26":"/zookeeper/wz9jt6uj/#统一配置管理","27":"/article/adrm6moe/#并行流和串行流","28":"/design-pattern/htacao8y/#基本介绍","29":"/dubbo/yq1jcth3/#dubbo-service模块","30":"/design-pattern/biychupa/#设计模式的目的","31":"/article/adrm6moe/#lambda-表达式","32":"/design-pattern/06w076lh/#基本介绍","33":"/design-pattern/nu3k3c27/#基本介绍","34":"/design-pattern/vys0x21y/#oo-面向对象-中继承的思考和说明","35":"/design-pattern/htacao8y/#应用实例","36":"/dubbo/yq1jcth3/#编写service","37":"/design-pattern/biychupa/#设计模式常用七大原则","38":"/article/adrm6moe/#举例","39":"/design-pattern/06w076lh/#应用实例","40":"/design-pattern/5po05j0t/#基本介绍","41":"/design-pattern/nu3k3c27/#应用实例","42":"/design-pattern/vys0x21y/#基本介绍","43":"/design-pattern/htacao8y/#方案1","44":"/dubbo/yq1jcth3/#导入配置文件","45":"/design-pattern/m3os7slg/#基本介绍","46":"/design-pattern/n4zaaidx/#基本介绍","47":"/article/adrm6moe/#基本使用","48":"/design-pattern/5po05j0t/#具体实例","49":"/test-quality/8byrze87/#为什么需要软件测试-核心价值","50":"/design-pattern/nu3k3c27/#方案-1","51":"/design-pattern/vys0x21y/#实例","52":"/design-pattern/htacao8y/#方案2","53":"/dubbo/yq1jcth3/#dubbo-web模块","54":"/design-pattern/m3os7slg/#实例","55":"/design-pattern/n4zaaidx/#实例","56":"/article/adrm6moe/#总结","57":"/design-pattern/5po05j0t/#实例分析-改进","58":"/test-quality/8byrze87/#哪些人需要了解软件测试","59":"/design-pattern/nu3k3c27/#方案-2","60":"/design-pattern/vys0x21y/#错误示例","61":"/design-pattern/htacao8y/#方案3","62":"/dubbo/yq1jcth3/#添加web-xml文件","63":"/design-pattern/m3os7slg/#分析-解决办法","64":"/design-pattern/n4zaaidx/#设计原则核心思想","65":"/article/adrm6moe/#函数式-functional-接口","66":"/test-quality/8byrze87/#软件测试等级划分","67":"/design-pattern/nu3k3c27/#依赖关系传递的三种方式","68":"/design-pattern/vys0x21y/#解决思路","69":"/design-pattern/htacao8y/#注意事项和细节","70":"/dubbo/yq1jcth3/#添加dubbo-service依赖","71":"/design-pattern/m3os7slg/#注意事项和细节","72":"/article/adrm6moe/#java内置函数式接口","73":"/test-quality/8byrze87/#第1级-初始阶段","74":"/design-pattern/nu3k3c27/#接口传递","75":"/design-pattern/vys0x21y/#正确方式","76":"/dubbo/yq1jcth3/#添加配置文件","77":"/article/adrm6moe/#方法引用和构造器引用","78":"/test-quality/8byrze87/#第2级-定义阶段","79":"/design-pattern/nu3k3c27/#构造方法传递","80":"/dubbo/yq1jcth3/#编写controller","81":"/article/adrm6moe/#方法引用","82":"/test-quality/8byrze87/#第3级-集成阶段","83":"/design-pattern/nu3k3c27/#setter-方式传递","84":"/dubbo/yq1jcth3/#启动","85":"/article/adrm6moe/#构造器引用和数组引用","86":"/test-quality/8byrze87/#第4级-管理与测量","87":"/design-pattern/nu3k3c27/#注意事项和细节","88":"/article/adrm6moe/#stream-api","89":"/test-quality/8byrze87/#第5级-最佳化","90":"/article/adrm6moe/#optional类"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,1],"1":[1,1,17],"2":[1,1,16],"3":[1,1,15],"4":[1,1,12],"5":[1,1,1],"6":[1,1,2],"7":[1,1,2],"8":[1,2,11],"9":[1,1,5],"10":[1,1,3],"11":[1,2,8],"12":[1,1,8],"13":[1,2,1],"14":[1,1,2],"15":[1,2,20],"16":[1,2,2],"17":[1,1,3],"18":[1,1,16],"19":[1,2,25],"20":[1,3,8],"21":[1,1,1],"22":[1,1,17],"23":[1,1,92],"24":[2,1,11],"25":[1,2,34],"26":[1,3,13],"27":[1,2,7],"28":[1,1,9],"29":[2,1,1],"30":[1,1,40],"31":[2,1,7],"32":[1,1,3],"33":[1,1,30],"34":[3,1,21],"35":[1,1,2],"36":[1,3,20],"37":[2,1,10],"38":[1,3,42],"39":[1,1,90],"40":[1,1,21],"41":[1,1,3],"42":[1,1,31],"43":[1,2,50],"44":[1,3,94],"45":[1,1,33],"46":[1,1,7],"47":[1,3,96],"48":[1,1,74],"49":[3,1,7],"50":[2,2,68],"51":[1,1,1],"52":[1,2,58],"53":[2,1,1],"54":[1,1,105],"55":[1,1,12],"56":[1,3,14],"57":[1,1,94],"58":[2,1,5],"59":[2,2,60],"60":[1,2,74],"61":[1,2,57],"62":[2,3,95],"63":[1,1,106],"64":[1,1,7],"65":[3,1,110],"66":[1,1,1],"67":[1,1,1],"68":[1,2,16],"69":[1,1,12],"70":[2,3,20],"71":[1,1,6],"72":[1,4,125],"73":[2,2,12],"74":[1,2,47],"75":[1,2,89],"76":[1,3,93],"77":[1,1,69],"78":[2,2,16],"79":[1,2,43],"80":[1,3,23],"81":[1,2,125],"82":[2,2,14],"83":[2,2,44],"84":[1,1,21],"85":[1,2,62],"86":[2,2,12],"87":[1,1,10],"88":[2,1,1],"89":[2,2,10],"90":[1,1,1]},"averageFieldLength":[1.2527472527472532,1.5604395604395604,30.593406593406588],"storedFields":{"0":{"title":"画类图","titles":[null]},"1":{"title":"项目架构目标","titles":[null]},"2":{"title":"概念","titles":[null]},"3":{"title":"集群和分布式","titles":[null]},"4":{"title":"架构","titles":[null]},"5":{"title":"架构演进","titles":[null]},"6":{"title":"学习视频","titles":[null]},"7":{"title":"学习书籍","titles":[null]},"8":{"title":"单体结构","titles":[null,"架构演进"]},"9":{"title":"JUC是什么","titles":[null]},"10":{"title":"概述","titles":[null]},"11":{"title":"垂直架构","titles":[null,"架构演进"]},"12":{"title":"前置知识","titles":[null]},"13":{"title":"工作机制","titles":[null,"概述"]},"14":{"title":"介绍","titles":[null]},"15":{"title":"分布式架构","titles":[null,"架构演进"]},"16":{"title":"应用场景","titles":[null,"概述"]},"17":{"title":"学习视频","titles":[null]},"18":{"title":"设计模式的重要性","titles":[null]},"19":{"title":"SOA架构","titles":[null,"架构演进"]},"20":{"title":"统一命名服务","titles":[null,"概述","应用场景"]},"21":{"title":"学习书籍","titles":[null]},"22":{"title":"简介","titles":[null]},"23":{"title":"创建项目和模块","titles":[null]},"24":{"title":"设计模式在软件中哪里?","titles":[null]},"25":{"title":"微服务架构","titles":[null,"架构演进"]},"26":{"title":"统一配置管理","titles":[null,"概述","应用场景"]},"27":{"title":"并行流和串行流","titles":[null,"简介"]},"28":{"title":"基本介绍","titles":[null]},"29":{"title":"dubbo-service模块","titles":[null]},"30":{"title":"设计模式的目的","titles":[null]},"31":{"title":"Lambda 表达式","titles":[null]},"32":{"title":"基本介绍","titles":[null]},"33":{"title":"基本介绍","titles":[null]},"34":{"title":"OO(面向对象) 中继承的思考和说明","titles":[null]},"35":{"title":"应用实例","titles":[null]},"36":{"title":"编写Service","titles":[null,"dubbo-service模块"]},"37":{"title":"设计模式常用七大原则:","titles":[null]},"38":{"title":"举例","titles":[null,"Lambda 表达式"]},"39":{"title":"应用实例","titles":[null]},"40":{"title":"基本介绍","titles":[null]},"41":{"title":"应用实例","titles":[null]},"42":{"title":"基本介绍","titles":[null]},"43":{"title":"方案1","titles":[null,"应用实例"]},"44":{"title":"导入配置文件","titles":[null,"dubbo-service模块"]},"45":{"title":"基本介绍","titles":[null]},"46":{"title":"基本介绍","titles":[null]},"47":{"title":"基本使用","titles":[null,"Lambda 表达式"]},"48":{"title":"具体实例","titles":[null]},"49":{"title":"为什么需要软件测试(核心价值)?","titles":[null]},"50":{"title":"方案 1","titles":[null,"应用实例"]},"51":{"title":"实例","titles":[null]},"52":{"title":"方案2","titles":[null,"应用实例"]},"53":{"title":"dubbo-web模块","titles":[null]},"54":{"title":"实例","titles":[null]},"55":{"title":"实例","titles":[null]},"56":{"title":"总结","titles":[null,"Lambda 表达式"]},"57":{"title":"实例分析+改进","titles":[null]},"58":{"title":"哪些人需要了解软件测试?","titles":[null]},"59":{"title":"方案 2","titles":[null,"应用实例"]},"60":{"title":"错误示例","titles":[null,"实例"]},"61":{"title":"方案3","titles":[null,"应用实例"]},"62":{"title":"添加web.xml文件","titles":[null,"dubbo-web模块"]},"63":{"title":"分析+解决办法","titles":[null]},"64":{"title":"设计原则核心思想","titles":[null]},"65":{"title":"函数式(Functional)接口","titles":[null]},"66":{"title":"软件测试等级划分","titles":[null]},"67":{"title":"依赖关系传递的三种方式","titles":[null]},"68":{"title":"解决思路","titles":[null,"实例"]},"69":{"title":"注意事项和细节","titles":[null]},"70":{"title":"添加dubbo-service依赖","titles":[null,"dubbo-web模块"]},"71":{"title":"注意事项和细节","titles":[null]},"72":{"title":"Java内置函数式接口","titles":[null,"函数式(Functional)接口"]},"73":{"title":"第1级. 初始阶段","titles":[null,"软件测试等级划分"]},"74":{"title":"接口传递","titles":[null,"依赖关系传递的三种方式"]},"75":{"title":"正确方式","titles":[null,"实例"]},"76":{"title":"添加配置文件","titles":[null,"dubbo-web模块"]},"77":{"title":"方法引用和构造器引用","titles":[null]},"78":{"title":"第2级. 定义阶段","titles":[null,"软件测试等级划分"]},"79":{"title":"构造方法传递","titles":[null,"依赖关系传递的三种方式"]},"80":{"title":"编写Controller","titles":[null,"dubbo-web模块"]},"81":{"title":"方法引用","titles":[null,"方法引用和构造器引用"]},"82":{"title":"第3级. 集成阶段","titles":[null,"软件测试等级划分"]},"83":{"title":"setter 方式传递","titles":[null,"依赖关系传递的三种方式"]},"84":{"title":"启动","titles":[null]},"85":{"title":"构造器引用和数组引用","titles":[null,"方法引用和构造器引用"]},"86":{"title":"第4级. 管理与测量","titles":[null,"软件测试等级划分"]},"87":{"title":"注意事项和细节","titles":[null]},"88":{"title":"Stream API","titles":[null]},"89":{"title":"第5级. 最佳化","titles":[null,"软件测试等级划分"]},"90":{"title":"Optional类","titles":[null]}},"dirtCount":0,"index":[["机制好转",{"2":{"89":1}}],["建立缺陷预防的思想",{"2":{"89":1}}],["利于层序扩展和优化",{"2":{"87":1}}],["变量的声明类型尽量是抽象类或接口",{"2":{"87":1}}],["底层模块尽量都要有抽象类或接口",{"2":{"87":1}}],["出现质量管理活动",{"2":{"86":1}}],["拥有流程控制",{"2":{"86":1}}],["拥有基本的测试工具",{"2":{"82":1}}],["管理与测量",{"0":{"86":1}}],["管理学院员工的管理类",{"2":{"54":1,"63":1}}],["写法与构造器引用类似",{"2":{"85":1}}],["数组引用",{"2":{"85":2}}],["数据类型可以省略",{"2":{"47":1}}],["且方法的返回值即为构造器对应类的对象",{"2":{"85":1}}],["且比较容易想到",{"2":{"50":1}}],["自动工具完全支持测试用例的运行",{"2":{"89":1}}],["自动与函数式接口中方法兼容",{"2":{"85":1}}],["自动化部署",{"2":{"25":1}}],["浏览器会显示字符串",{"2":{"84":1}}],["访问localhost",{"2":{"84":1}}],["路径为",{"2":{"84":1}}],["安装maven的jar包",{"2":{"84":1}}],["安全访问和数据加密",{"2":{"1":1}}],["安全性",{"2":{"1":1}}],["首先在dubbo",{"2":{"84":1}}],["首先查看下面的uml类图",{"2":{"39":1}}],["启动",{"0":{"84":1}}],["没有开展评审活动",{"2":{"82":1}}],["基于规范的测试",{"2":{"86":1}}],["基于技术的测试",{"2":{"82":1}}],["基本使用",{"0":{"47":1}}],["基本介绍",{"0":{"28":1,"32":1,"33":1,"40":1,"42":1,"45":1,"46":1}}],["成立专门的测试组织",{"2":{"82":1}}],["成员",{"2":{"79":1}}],["集成阶段",{"0":{"82":1}}],["集群",{"2":{"3":1}}],["集群和分布式",{"0":{"3":1}}],["6000",{"2":{"81":1}}],["6",{"2":{"81":1}}],["静态方法",{"2":{"81":1}}],["静态方法名",{"2":{"81":1}}],["情况三",{"2":{"81":1}}],["情况二",{"2":{"81":1}}],["情况一",{"2":{"81":1}}],["各情况示例代码如下所示",{"2":{"81":1}}],["各个客户端服务器监听这个znode",{"2":{"26":1}}],["必须与方法引用的方法的参数列表和返回值类型保持一致",{"2":{"81":1}}],["要求构造器参数列表要与接口中抽象方法的参数列表一致",{"2":{"85":1}}],["要求",{"2":{"81":1}}],["已经有了实现的方法时",{"2":{"81":1}}],["注入service",{"2":{"80":1}}],["注意",{"2":{"71":1}}],["注意事项和细节",{"0":{"69":1,"71":1,"87":1}}],["新建包top",{"2":{"80":1}}],["新增了一个方法func2",{"2":{"60":1,"75":1}}],["新增了一个shape的子类",{"2":{"48":1}}],["新增一个图形",{"2":{"57":1}}],["新增一个三角形类",{"2":{"48":1,"57":1}}],["构造器引用",{"2":{"85":4}}],["构造器引用和数组引用",{"0":{"85":1}}],["构造器",{"2":{"79":1}}],["构造方法传递",{"0":{"79":1}}],["产品存在质量问题",{"2":{"78":1}}],["从而导致大量缺陷扩散到代码中",{"2":{"78":1}}],["从上到下运行程序",{"2":{"27":1}}],["取得了一定的效果",{"2":{"78":1}}],["第5级",{"0":{"89":1}}],["第4级",{"0":{"86":1}}],["第3级",{"0":{"82":1}}],["第2级",{"0":{"78":1}}],["第1级",{"0":{"73":1}}],["^",{"2":{"77":1}}],["文件内容如下所示",{"2":{"76":1}}],["文件目录结构如下所示",{"2":{"62":1}}],["||",{"2":{"77":1}}],["|",{"2":{"76":1}}],["正确方式",{"0":{"75":1}}],["打开",{"2":{"74":1,"79":1,"83":1}}],["长虹电视机",{"2":{"74":1,"79":1,"83":1}}],["存在很多缺陷",{"2":{"73":1}}],["存在的问题",{"2":{"11":1,"15":1}}],["弊端",{"2":{"73":1,"78":1,"82":1,"86":1}}],["优势",{"2":{"73":1,"78":1,"82":1,"86":1,"89":1}}],["优点",{"2":{"8":1}}],["措施",{"2":{"73":1,"78":1,"82":1,"86":1,"89":1}}],["初始阶段",{"0":{"73":1}}],["子接口",{"2":{"72":1}}],["此处采用组合方式",{"2":{"75":1}}],["此外还有其他接口",{"2":{"72":1}}],["此时",{"2":{"76":1}}],["此时web",{"2":{"62":1}}],["此时dubbo",{"2":{"62":1}}],["此时增加后改动的地方用红色标记",{"2":{"48":1}}],["过滤符合条件的字符串",{"2":{"72":1}}],["京",{"2":{"72":3}}],["获取字符串中有",{"2":{"72":1}}],["获取到学校总部员工",{"2":{"54":1,"63":1}}],["获取到学院员工",{"2":{"54":1,"63":1}}],["普京",{"2":{"72":1}}],["西京",{"2":{"72":1}}],["东京",{"2":{"72":1}}],["天津",{"2":{"72":1}}],["天空运行",{"2":{"52":2}}],["南京",{"2":{"72":1,"81":1}}],["北京",{"2":{"72":1,"81":1}}],["请自己吃一份大餐",{"2":{"72":1}}],["花了",{"2":{"72":2}}],["花木凋零成兰",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"75":1}}],["休息一会吧",{"2":{"72":1}}],["确定类型为t的对象是否满足某约束",{"2":{"72":1}}],["确保产品的质量",{"2":{"49":1}}],["断定型接口",{"2":{"72":1}}],["结果是r类型的对象",{"2":{"72":1}}],["供给型接口",{"2":{"72":1}}],["供其他调用者消费",{"2":{"15":1}}],["包含方法为",{"2":{"72":5}}],["包含方法",{"2":{"72":4}}],["包含的功能如",{"2":{"19":1}}],["消费型接口",{"2":{"72":1}}],["才可以在方法级保持单一职责原则",{"2":{"69":1}}],["才能在代码级违反单一职责原则",{"2":{"69":1}}],["降低变更引起的风险",{"2":{"69":1}}],["降低类的复杂性",{"2":{"69":1}}],["降低处理能力",{"2":{"1":1}}],["采用依赖",{"2":{"68":1}}],["采用的是直接实现方式",{"2":{"50":1}}],["去买点吃的",{"2":{"72":1}}],["去掉原有继承关系",{"2":{"68":1}}],["去中心化",{"2":{"25":1}}],["让原来的父类和子类都继承一个基类",{"2":{"68":1}}],["让子类实现该方法",{"2":{"57":1}}],["会导致整个继承体系复用性变差",{"2":{"68":1}}],["会出现两个报错",{"2":{"62":1}}],["特别是运行多态繁琐",{"2":{"68":1}}],["特点",{"2":{"25":1}}],["造成原有功能出现错误",{"2":{"68":1}}],["匿名实现类表示的现在都可以用lambda表达式来写",{"2":{"65":1}}],["它们必须依附于一类特别的对象类型",{"2":{"65":1}}],["它将应用程序的不同功能单元",{"2":{"19":1}}],["函数型接口",{"2":{"72":1}}],["函数被当做一等公民对待",{"2":{"65":1}}],["函数式接口",{"2":{"65":1,"72":2}}],["函数式",{"0":{"65":1},"1":{"72":1}}],["那么该对象就可以用lambda表达式来表示",{"2":{"65":1}}],["那么该异常需要在目标接口的抽象方法上进行声明",{"2":{"65":1}}],["那么类型",{"2":{"42":1}}],["非运行时异常",{"2":{"65":1}}],["非常方便",{"2":{"30":1}}],["标记接口为函数式接口",{"2":{"65":1}}],["针对接口编程",{"2":{"64":1}}],["找出应用中可能需要变化之处",{"2":{"64":1}}],["应该避免类中出现这样非直接朋友关系的耦合",{"2":{"63":1}}],["应用实例",{"0":{"35":1,"39":1,"41":1},"1":{"43":1,"50":1,"52":1,"59":1,"61":1}}],["应用场景",{"0":{"16":1},"1":{"20":1,"26":1}}],["按照迪米特法则",{"2":{"63":1}}],["前置",{"2":{"77":1}}],["前置知识",{"0":{"12":1}}],["前面设计的问题在于schoolmanager中",{"2":{"63":1}}],["另一个是spring",{"2":{"62":1}}],["添加配置文件",{"0":{"76":1}}],["添加完成后",{"2":{"70":1}}],["添加完web",{"2":{"62":1}}],["添加dubbo",{"0":{"70":1},"2":{"70":1}}],["添加web",{"0":{"62":1}}],["加载spring容器",{"2":{"62":1}}],["加密处理",{"2":{"19":1}}],["然后在dubbo",{"2":{"84":1}}],["然后新建usercontroller类",{"2":{"80":1}}],["然后接口中只有一个抽象方法",{"2":{"65":1}}],["然后再新建目录web",{"2":{"62":1}}],["然后根据type",{"2":{"48":1,"57":1}}],["仍然遵守单一职责原则",{"2":{"61":1}}],["考虑在交通工具类中",{"2":{"61":1}}],["与函数式接口相结合",{"2":{"85":1}}],["与方法名分隔开",{"2":{"81":1}}],["与",{"2":{"60":1,"75":1}}],["与大括号若有",{"2":{"47":1}}],["返回",{"2":{"72":1}}],["返回类型为t的对象",{"2":{"72":1}}],["返回类型",{"2":{"72":2}}],["返回两个数的差",{"2":{"60":1,"75":1}}],["返回学校总部的员工",{"2":{"54":1,"63":1}}],["返回学院的所有员工",{"2":{"54":1,"63":1}}],["错误示例",{"0":{"60":1}}],["微信信息",{"2":{"59":2}}],["微信",{"2":{"59":1}}],["微服务架构强调的一个重点是",{"2":{"25":1}}],["微服务架构是在",{"2":{"25":1}}],["微服务架构",{"0":{"25":1},"2":{"25":1}}],["电子邮件",{"2":{"59":1}}],["电子邮件信息",{"2":{"50":2,"59":2}}],["定义阶段",{"0":{"78":1}}],["定义接口",{"2":{"59":1}}],["定义的所有程序",{"2":{"42":1}}],["哪些人需要了解软件测试",{"0":{"58":1}}],["形式和依赖倒转原则相似",{"2":{"57":1}}],["形成多个独立的单体架构",{"2":{"11":1}}],["上述改进办法",{"2":{"57":1}}],["上做的升华",{"2":{"25":1}}],["调用完成的功能就会很明确",{"2":{"75":1}}],["调用具体实例的draw方法即可",{"2":{"57":1}}],["调用远程服务的服务消费方",{"2":{"4":1}}],["每增加一个图形",{"2":{"57":1}}],["每个类只是减少了不必要的依赖",{"2":{"71":1}}],["每个对象都会与其他对象有耦合关系",{"2":{"45":1}}],["每个微服务有自己私有的数据库持久化业务数据",{"2":{"25":1}}],["还需要修改客户端",{"2":{"61":1}}],["还需要修改",{"2":{"57":1}}],["还可能有微信",{"2":{"50":1}}],["尝试一下便可体会到新增的繁琐",{"2":{"57":1}}],["但假设我们需要新增十个图形的绘制",{"2":{"57":1}}],["但是接着会出现top",{"2":{"76":1}}],["但是在java8中",{"2":{"65":1}}],["但是在方法级别上",{"2":{"61":1}}],["但是随着python",{"2":{"65":1}}],["但是改动过大",{"2":{"52":1}}],["但是",{"2":{"50":1}}],["但是没有返回值",{"2":{"47":1}}],["但是类b必须实现interface1中的所有方法",{"2":{"39":1}}],["但是类a只会使用到interface1中的三个方法",{"2":{"39":1}}],["但是指挥用到1",{"2":{"39":4}}],["但是子类对父类已实现方法随机修改的话",{"2":{"34":1}}],["容易操作",{"2":{"57":1}}],["虽然没有在",{"2":{"61":1}}],["虽然比较好理解",{"2":{"57":1}}],["虽然不强制子类遵守",{"2":{"34":1}}],["更准确的来说是作为函数式接口的实例",{"2":{"56":1}}],["总结",{"0":{"56":1}}],["参数分别为int",{"2":{"72":1}}],["参数应用操作",{"2":{"72":2}}],["参数类型",{"2":{"72":2}}],["参数的小括号可以省略",{"2":{"47":1}}],["参考依赖倒转原则中依赖关系传递的三种方式",{"2":{"55":1}}],["违反了",{"2":{"54":1}}],["该方法完成输出学校总部和学院员工信息",{"2":{"54":1,"63":1}}],["学校管理类",{"2":{"54":1,"63":1}}],["学校总部员工",{"2":{"54":1,"63":1}}],["学校总部员工id=",{"2":{"54":1,"63":1}}],["学校总部员工类",{"2":{"54":1,"63":1}}],["学校总部的员工信息",{"2":{"54":1,"63":1}}],["学院员工",{"2":{"54":1,"63":1}}],["学院员工id=",{"2":{"54":1,"63":1}}],["学院的员工类",{"2":{"54":1,"63":1}}],["学习太累了",{"2":{"72":2}}],["学习书籍",{"0":{"7":1,"21":1}}],["学习视频",{"0":{"6":1,"17":1}}],["和return",{"2":{"56":1}}],["和",{"2":{"54":1,"63":1}}],["输出学院员工信息",{"2":{"63":1}}],["输出学院员工的信息",{"2":{"63":1}}],["输出学院的员工id",{"2":{"54":1,"63":1}}],["输出结果",{"2":{"39":1,"48":1,"50":1,"59":1,"75":1}}],["创建一个更加基础的基类",{"2":{"75":1}}],["创建了一个",{"2":{"54":1,"63":1}}],["创建项目名为dubbo",{"2":{"23":1}}],["创建项目和模块",{"0":{"23":1}}],["客户端无需改变",{"2":{"59":1}}],["客户端",{"2":{"54":1,"63":1}}],["客户端不应该依赖它不需要的接口",{"2":{"32":1}}],["点击复制到编译器即可",{"2":{"77":1}}],["点击查看示例类",{"2":{"77":1}}],["点击查看java中函数式接口注解的底层实现",{"2":{"65":1}}],["点击查看详情",{"2":{"63":1}}],["点击查看代码",{"2":{"62":1,"74":1,"79":1,"83":1}}],["点击查看",{"2":{"39":1}}],["点开查看示例",{"2":{"65":1}}],["点开查看详情",{"2":{"54":1}}],["现要求打印出学校总部员工id和学院员工的id",{"2":{"54":1}}],["下属有各个学院和总部",{"2":{"54":1}}],["见方案3",{"2":{"52":1}}],["改动过大",{"2":{"61":1}}],["改动的代码会比较少",{"2":{"52":1}}],["改进代码和运行结果如下",{"2":{"57":1}}],["改进",{"2":{"52":1}}],["直接朋友",{"2":{"54":1,"63":1}}],["直接修改vehicle类",{"2":{"52":1}}],["直接的朋友",{"2":{"45":2}}],["同时",{"2":{"57":1}}],["同时也需要修改客户端",{"2":{"52":1}}],["同时类图的具体实现代码如下所示",{"2":{"39":1}}],["遵守单一职责原则",{"2":{"52":1}}],["遵循里氏替换原则",{"2":{"42":1,"87":1}}],["遵循开闭原则",{"2":{"40":1}}],["水路运行",{"2":{"52":1}}],["公路运行",{"2":{"52":3}}],["根据方案2中",{"2":{"61":1}}],["根据方案1",{"2":{"52":1}}],["根据依赖倒转原则",{"2":{"59":1}}],["根据不同的交通工具",{"2":{"43":1}}],["引用构造方法",{"2":{"85":1}}],["引入一个抽象的接口",{"2":{"50":1}}],["引擎",{"2":{"22":1}}],["得到解决思路",{"2":{"50":1}}],["短信等",{"2":{"50":2}}],["完成person接收消息的功能",{"2":{"50":1,"59":1}}],["效果更好",{"2":{"49":1,"82":1}}],["效率更高",{"2":{"49":1}}],["核心价值",{"0":{"49":1}}],["绘制其他图形",{"2":{"57":2}}],["绘制三角形",{"2":{"48":2,"57":2}}],["绘制圆形",{"2":{"48":2,"57":2}}],["绘制矩形",{"2":{"48":2,"57":2}}],["绘制不同的图形",{"2":{"48":1,"57":1}}],["查看存在的问题",{"2":{"48":1,"57":1}}],["三角形类",{"2":{"48":1}}],["体只有一条语句时",{"2":{"47":1}}],["多条执行语句",{"2":{"47":1}}],["若访问成功",{"2":{"84":1}}],["若",{"2":{"65":1}}],["若只需要一个参数时",{"2":{"47":1}}],["若对类图理解不够清楚",{"2":{"39":1}}],["称为函数式接口",{"2":{"65":1}}],["称为",{"2":{"47":1}}],["称为服务",{"2":{"19":1}}],["作为接口的实例",{"2":{"47":3}}],["作为独立的服务",{"2":{"15":1}}],["需要创建一个具体类",{"2":{"77":1}}],["需要两个或以上的参数",{"2":{"47":1}}],["需要一个参数",{"2":{"47":1}}],["需要考虑所有的子类",{"2":{"34":1}}],["格式",{"2":{"81":1,"85":2}}],["格式六",{"2":{"47":1}}],["格式五",{"2":{"47":1}}],["格式四",{"2":{"47":1}}],["格式三",{"2":{"47":1}}],["格式二",{"2":{"47":1}}],["格式一",{"2":{"47":1}}],["无法主动控制缺陷",{"2":{"86":1}}],["无",{"2":{"72":1}}],["无意",{"2":{"60":1}}],["无返回值",{"2":{"47":1}}],["无参",{"2":{"47":1}}],["六种情况",{"2":{"47":1}}],["右边",{"2":{"47":1,"56":1}}],["左边",{"2":{"47":1,"56":1}}],["箭头操作符",{"2":{"47":1}}],["或者两者都有",{"2":{"87":1}}],["或对象",{"2":{"81":1}}],["或系统复杂时",{"2":{"68":1}}],["或",{"2":{"47":1}}],["符号含义",{"2":{"47":1}}],["聚合",{"2":{"46":2,"55":1,"68":1}}],["聚合等",{"2":{"45":1}}],["尽量使用合成",{"2":{"46":1}}],["尽量通过扩展软件实体的行为来实现变化",{"2":{"40":1}}],["陌生的类最好不要以局部变量的形式出现在类的内部",{"2":{"45":1}}],["其中",{"2":{"45":1}}],["关联",{"2":{"45":1}}],["我该引用啥",{"2":{"85":1}}],["我们仍然想使用a的方法",{"2":{"75":1}}],["我们应当遵守单一职责原则",{"2":{"69":1}}],["我们可以使用lambda表达式创建函数式接口的对象",{"2":{"65":1}}],["我们可以自定义函数式接口",{"2":{"65":1}}],["我们获取消息的对象不只是电子邮件",{"2":{"50":1}}],["我们称出现成员变量",{"2":{"45":1}}],["我们就说这两个对象之间是朋友关系",{"2":{"45":1}}],["我爱北京故宫",{"2":{"38":1,"47":1}}],["我爱北京天安门",{"2":{"38":1,"47":1}}],["只能被动地找缺陷",{"2":{"86":1}}],["只有当编码完成后才开始测试",{"2":{"78":1}}],["只有类中方法数量足够少",{"2":{"69":1}}],["只有逻辑足够简单",{"2":{"69":1}}],["只要一个对象是函数式接口的实例",{"2":{"65":1}}],["只要两个对象之间有耦合关系",{"2":{"45":1}}],["只包含一个抽象方法的接口",{"2":{"65":1}}],["只是增加方法",{"2":{"61":1}}],["只是单纯实现基本功能",{"2":{"57":1}}],["只与",{"2":{"45":1}}],["通常情况下",{"2":{"69":1}}],["通过统计抽样等方式不断改进测试",{"2":{"89":1}}],["通过setter方法传递",{"2":{"83":1}}],["通过setter方法进行依赖传递",{"2":{"83":1}}],["通过构造方法依赖传递",{"2":{"79":1}}],["通过构造器进行依赖传递",{"2":{"79":1}}],["通过接口传递实现依赖",{"2":{"74":1}}],["通过参数contextconfiglocation加载",{"2":{"62":1}}],["通过硬件增加",{"2":{"1":1}}],["通信",{"2":{"45":1}}],["不断改进测试",{"2":{"89":1}}],["不会再func1是求减法",{"2":{"75":1}}],["不要和那些不需要变化的代码混在一起",{"2":{"64":1}}],["不需要修改使用方",{"2":{"57":1}}],["不是",{"2":{"54":2,"63":1}}],["不对外泄露任何信息",{"2":{"45":1}}],["不用多次编写",{"2":{"30":1}}],["又叫最少知道原则",{"2":{"45":1}}],["又负责飞机的运行等",{"2":{"43":1}}],["迪米特法则的核心是降低类之间的耦合",{"2":{"71":1}}],["迪米特法则还有个更简单的定义",{"2":{"45":1}}],["迪米特法则",{"2":{"45":1,"54":2,"63":1}}],["迪米特原则",{"2":{"37":1}}],["耦合的方式很多",{"2":{"45":1}}],["耦合度越大",{"2":{"45":1}}],["耦合性",{"2":{"30":1}}],["扫描service包下的bean",{"2":{"44":1}}],["\\tbipredicate",{"2":{"81":2}}],["\\tfunction",{"2":{"81":4}}],["\\tcomparator",{"2":{"81":4}}],["\\tcon2",{"2":{"81":1}}],["\\tcon1",{"2":{"81":1}}],["\\tconsumer",{"2":{"81":2}}],["\\tsupplier",{"2":{"81":2}}],["\\tsystem",{"2":{"81":19}}],["\\temployee",{"2":{"81":2}}],["\\tprivate",{"2":{"77":4,"83":1}}],["\\tpublic",{"2":{"74":2,"77":15,"79":2,"83":7}}],["\\t\\ttemp",{"2":{"77":1}}],["\\t\\tthis",{"2":{"77":11,"83":2}}],["\\t\\tresult",{"2":{"77":4}}],["\\t\\treturn",{"2":{"77":7}}],["\\t\\tlong",{"2":{"77":1}}],["\\t\\tint",{"2":{"77":1}}],["\\t\\tif",{"2":{"77":5}}],["\\t\\temployee",{"2":{"77":1}}],["\\t\\t\\treturn",{"2":{"77":5}}],["\\t\\tsystem",{"2":{"74":1,"79":1,"83":1}}],["\\t\\t",{"2":{"74":1,"79":1,"83":1}}],["\\t\\topenandclose",{"2":{"74":2,"79":2,"83":3}}],["\\t\\tchanghong",{"2":{"74":1,"79":1,"83":1}}],["\\t",{"2":{"44":6,"74":3,"77":18,"79":3,"81":1,"83":5}}],["whatsoever",{"2":{"65":1}}],["when",{"2":{"65":1}}],["watervehicle",{"2":{"52":4}}],["weixin",{"2":{"50":1,"59":2}}],["web模块中创建top",{"2":{"76":1}}],["web模块",{"0":{"53":1},"1":{"62":1,"70":1,"76":1,"80":1},"2":{"62":1,"84":1}}],["web模块导入如下依赖和对应的tomcat服务启动插件",{"2":{"23":1}}],["webmvc",{"2":{"23":2}}],["web",{"2":{"23":1,"62":7}}],["web两个maven模块",{"2":{"23":1}}],["webservice",{"2":{"15":1}}],["world",{"2":{"50":2,"59":4}}],["w3",{"2":{"44":1,"62":1,"76":1}}],["www",{"2":{"44":7,"62":1,"76":10}}],["8=9",{"2":{"60":1}}],["8=",{"2":{"60":3,"75":2}}],["8",{"2":{"44":1,"60":3,"62":1,"75":2,"76":1}}],["8000",{"2":{"84":1}}],["80",{"2":{"25":2}}],["yyyy",{"2":{"44":1,"76":1}}],["ytazwc",{"2":{"39":3,"43":1,"44":1,"48":2,"50":2,"52":1,"54":2,"57":2,"59":2,"60":2,"61":1,"63":2,"70":1,"75":2,"76":3,"80":2}}],["ytazwc下新建userservice接口类和实现类",{"2":{"36":1}}],["500",{"2":{"72":2}}],["53",{"2":{"61":1}}],["5",{"2":{"54":1,"62":2,"63":1,"85":1}}],["5699",{"2":{"81":1}}],["56",{"2":{"50":1}}],["5p",{"2":{"44":1,"76":1}}],["5方法",{"2":{"39":2}}],["false",{"2":{"77":4}}],["filterlist",{"2":{"72":3}}],["filterstring",{"2":{"72":5}}],["file=",{"2":{"44":1,"76":1}}],["file=org",{"2":{"44":1,"76":1}}],["fileappender",{"2":{"44":1,"76":1}}],["file",{"2":{"44":4,"76":4}}],["func3",{"2":{"75":2}}],["function中的r",{"2":{"81":2,"85":2}}],["function子接口",{"2":{"72":1}}],["function",{"2":{"72":1,"85":4}}],["functionalinterface注解来检验是否为函数式接口",{"2":{"65":1}}],["functionalinterface",{"2":{"65":3}}],["functional",{"0":{"65":1},"1":{"72":1}}],["func2",{"2":{"60":2,"75":2,"81":4,"85":6}}],["func1的值",{"2":{"60":1,"75":1}}],["func1",{"2":{"60":7,"75":8,"81":4,"85":6}}],["for",{"2":{"54":4,"63":4,"72":1}}],["framework",{"2":{"23":2}}],["xsd",{"2":{"44":3,"62":1,"76":4}}],["xsi",{"2":{"44":1,"62":1,"76":1}}],["xsi=",{"2":{"44":1,"62":1,"76":1}}],["xml文件中的第二个报错",{"2":{"76":1}}],["xml文件后",{"2":{"62":1}}],["xml文件内容如下所示",{"2":{"62":1}}],["xml文件",{"0":{"62":1},"2":{"62":1}}],["xmlschema",{"2":{"44":1,"62":1,"76":1}}],["xmlns",{"2":{"44":3,"62":1,"76":4}}],["xmlns=",{"2":{"44":1,"62":1,"76":1}}],["xml",{"2":{"44":4,"62":10,"76":3}}],["x3c",{"2":{"23":185,"38":4,"44":5,"47":12,"54":10,"62":34,"63":10,"65":7,"70":9,"72":11,"76":5,"81":14,"85":8}}],["导入后resources目录结构如下所示",{"2":{"76":1}}],["导入后dubbo",{"2":{"44":1}}],["导入配置文件",{"0":{"44":1}}],["因此调用者",{"2":{"75":1}}],["因此此时还没有在模块中创建该文件",{"2":{"62":1}}],["因此按照接口隔离原则来进行分析",{"2":{"39":1}}],["因为在pom文件中",{"2":{"84":1}}],["因为b类不再继承a类",{"2":{"75":1}}],["因为还没有在模块中引入dubbo",{"2":{"62":1}}],["因为为web项目",{"2":{"62":1}}],["因为不符合",{"2":{"57":1}}],["因为可由编译器推断得出",{"2":{"47":1}}],["因为使用的是spring+springmvc进行整合",{"2":{"44":1}}],["详见方案2",{"2":{"43":1}}],["详情",{"2":{"23":2,"39":1}}],["显然违反了单一职责原则",{"2":{"43":1}}],["轮船",{"2":{"43":1,"52":2,"61":2}}],["交通工具类",{"2":{"43":1}}],["飞机",{"2":{"43":2,"52":2,"61":2}}],["汽车",{"2":{"43":1,"61":2}}],["摩托车",{"2":{"43":2,"52":2}}],["来代表交通工具",{"2":{"43":1}}],["解决上述错误示例",{"2":{"75":1}}],["解决思路",{"0":{"68":1}}],["解决方式",{"2":{"55":1}}],["解决办法",{"2":{"43":1,"63":1}}],["解决问题",{"2":{"42":1}}],["解决了什么问题",{"2":{"18":1}}],["组合等关系解决",{"2":{"68":1}}],["组合",{"2":{"42":1,"45":1,"46":1,"55":1}}],["时",{"2":{"42":1}}],["都可以省略",{"2":{"47":1}}],["都尽量将逻辑封装在类的内部",{"2":{"45":1}}],["都代换成",{"2":{"42":1}}],["都有类型为",{"2":{"42":1}}],["用途",{"2":{"72":2}}],["用户无法接受",{"2":{"73":1}}],["用户",{"2":{"58":1}}],["用实现扩展细节",{"2":{"40":1}}],["用抽象构建框架",{"2":{"40":1}}],["模块和函数应该对扩展开发",{"2":{"40":1}}],["最佳化",{"0":{"89":1}}],["最省力气",{"2":{"73":1}}],["最重要的设计原则",{"2":{"40":1}}],["最大化减少空指针异常",{"2":{"22":1}}],["具体示例如下",{"2":{"65":1}}],["具体实现代码和结果如下所示",{"2":{"60":1}}],["具体实例如下",{"2":{"85":1}}],["具体实例",{"0":{"48":1}}],["具体代码和输出结果如下",{"2":{"75":1}}],["具体代码",{"2":{"39":1,"48":1,"50":1,"57":1,"59":1,"60":1,"75":1}}],["具有更好的",{"2":{"30":1}}],["保证类a的依赖最小接口",{"2":{"39":1}}],["这样在变量引用和实际对象间",{"2":{"87":1}}],["这样违背了",{"2":{"54":1,"63":1}}],["这就是lambda表达式和函数式接口的关系",{"2":{"65":1}}],["这种修改方法没有对原来的类做大的修改",{"2":{"61":1}}],["这里本意是求出",{"2":{"60":1,"75":1}}],["这里的",{"2":{"54":1}}],["这里我们增加了5个员工到",{"2":{"54":1,"63":1}}],["这里我们增加了10个员工到",{"2":{"54":1,"63":1}}],["这是因为我们还没有创建该目录",{"2":{"76":1}}],["这是一个用于绘图的类",{"2":{"48":1,"57":1}}],["这是很没有必要的",{"2":{"39":1}}],["这些类实现",{"2":{"50":1}}],["这些小应用之间通过服务完成交互和集成",{"2":{"25":1}}],["这些事组合成一件事",{"2":{"3":1}}],["由上述类图结合具体实现代码中",{"2":{"39":1}}],["由匿名内部类转换到lambda表达式",{"2":{"38":1}}],["31",{"2":{"77":3}}],["3=14",{"2":{"60":1}}],["3=8",{"2":{"60":1,"75":2}}],["3=",{"2":{"60":2,"75":2}}],["3",{"2":{"48":2,"54":1,"60":4,"75":5,"81":2}}],["3方法",{"2":{"39":2}}],["32",{"2":{"38":1,"47":1,"77":1}}],["23",{"2":{"81":1}}],["20",{"2":{"48":1,"57":2,"60":1,"75":1}}],["2001",{"2":{"44":1,"62":1,"76":1}}],["2024",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"75":1}}],["22",{"2":{"43":1,"47":2,"52":1,"61":1}}],["2",{"0":{"59":1},"2":{"39":2,"48":2,"54":1,"62":2}}],["21",{"2":{"23":4,"38":4,"47":2,"54":1,"63":1,"81":2}}],["依赖service模块",{"2":{"70":1}}],["依赖关系传递的三种方式",{"0":{"67":1},"1":{"74":1,"79":1,"83":1}}],["依赖",{"2":{"39":4,"42":1,"45":1,"46":1,"55":1}}],["依赖倒转",{"2":{"33":1,"37":1}}],["依赖倒转原则的设计理念",{"2":{"33":1}}],["依赖倒转原则",{"2":{"33":1}}],["类",{"2":{"81":5}}],["类型的函数",{"2":{"72":1}}],["类型的结果",{"2":{"72":1}}],["类型推断",{"2":{"47":1,"56":1}}],["类b无意间重写了父类的方法",{"2":{"68":1}}],["类级别上遵守单一职责原则",{"2":{"61":1}}],["类的直接朋友类有哪些",{"2":{"54":1,"63":1}}],["类依赖接口",{"2":{"50":1}}],["类也需要增加对应的接收方法",{"2":{"50":1}}],["类图设计如下",{"2":{"48":1}}],["类与类关系越密切",{"2":{"45":1}}],["类接收消息的功能",{"2":{"41":1}}],["类a通过接口interface1依赖使用类b",{"2":{"39":1}}],["类通过接口interface1",{"2":{"39":4}}],["类库",{"2":{"22":1}}],["bipredicate中的boolean",{"2":{"81":1}}],["bipredicate",{"2":{"72":1}}],["biconsumer",{"2":{"72":1}}],["binaryoperator",{"2":{"72":1}}],["bifunction中的r",{"2":{"85":1}}],["bifunction",{"2":{"72":2,"85":2}}],["boolean",{"2":{"72":5,"77":1}}],["be",{"2":{"65":1}}],["beans>",{"2":{"44":1,"76":1}}],["beans",{"2":{"44":5,"76":5}}],["base",{"2":{"44":1,"75":3,"76":1}}],["b类继承了a",{"2":{"60":1,"75":1}}],["b类",{"2":{"39":2}}],["b",{"2":{"39":16,"60":7,"75":10}}],["build>",{"2":{"23":2}}],["bus",{"2":{"19":1}}],["方案3分析",{"2":{"61":1}}],["方案3",{"0":{"61":1},"2":{"61":1}}],["方案2分析",{"2":{"52":1}}],["方案2",{"0":{"52":1},"2":{"52":1,"59":1}}],["方案",{"0":{"50":1,"59":1}}],["方案1",{"0":{"43":1},"2":{"43":1,"50":1}}],["方式传递",{"0":{"83":1}}],["方式6",{"2":{"47":1}}],["方式5",{"2":{"47":1}}],["方式4",{"2":{"47":1}}],["方式3",{"2":{"47":1,"83":1}}],["方式2",{"2":{"47":1,"79":1}}],["方式1完成",{"2":{"59":1}}],["方式1",{"2":{"47":1,"74":1}}],["方法名",{"2":{"81":1}}],["方法引用",{"0":{"81":1},"2":{"81":8}}],["方法引用前",{"2":{"77":1}}],["方法引用和构造器引用",{"0":{"77":1},"1":{"81":1,"85":1}}],["方法引用的写法",{"2":{"38":1}}],["方法中",{"2":{"57":1}}],["方法中就需要增加一个else",{"2":{"57":1}}],["方法返回值中的类为直接的朋友",{"2":{"45":1}}],["方法参数",{"2":{"45":1}}],["方法",{"2":{"45":1}}],["方便自动化部署",{"2":{"25":1}}],["null",{"2":{"77":4}}],["nums2",{"2":{"60":6,"75":6}}],["nums1",{"2":{"60":6,"75":6}}],["name=",{"2":{"77":1}}],["name",{"2":{"77":18,"85":2}}],["name>springmvc",{"2":{"62":2}}],["name>",{"2":{"62":4}}],["name>contextconfiglocation",{"2":{"62":2}}],["nashorn",{"2":{"22":1}}],["ns",{"2":{"62":3}}],["n",{"2":{"44":2,"72":2,"76":2}}],["new",{"2":{"38":2,"39":8,"43":1,"47":3,"48":4,"50":2,"52":3,"54":6,"57":5,"59":3,"60":2,"61":1,"63":6,"72":3,"74":2,"75":3,"79":2,"81":2,"83":2,"85":10}}],["value>",{"2":{"62":2}}],["value>classpath",{"2":{"62":2}}],["vehicle2",{"2":{"61":7}}],["vehicle",{"2":{"43":9,"52":6,"61":6}}],["version=",{"2":{"44":1,"62":2,"76":1}}],["version",{"2":{"23":10}}],["version>1",{"2":{"23":4,"70":1}}],["version>$",{"2":{"23":10}}],["version>3",{"2":{"23":3}}],["version>4",{"2":{"23":2}}],["version>2",{"2":{"23":2}}],["version>",{"2":{"23":23,"70":1}}],["version>5",{"2":{"23":2}}],["void",{"2":{"38":3,"39":39,"43":2,"47":8,"48":5,"50":2,"52":4,"54":4,"57":7,"59":2,"60":1,"61":4,"63":5,"65":2,"72":8,"74":5,"75":1,"77":4,"79":5,"81":7,"83":7,"85":4}}],["temp",{"2":{"77":3}}],["test7",{"2":{"81":1}}],["test6",{"2":{"47":1,"81":1}}],["test5",{"2":{"47":1,"81":1}}],["test4",{"2":{"47":1,"81":1,"85":1}}],["test3",{"2":{"47":1,"81":1,"85":1}}],["test2",{"2":{"38":1,"47":1,"72":1,"81":1,"85":1}}],["test1",{"2":{"38":1,"47":1,"72":1,"81":1,"85":1}}],["test",{"2":{"38":2,"47":6,"72":6,"81":10,"85":4}}],["true",{"2":{"77":1}}],["triangle",{"2":{"48":3,"57":3}}],["tv",{"2":{"74":3,"79":5,"83":6}}],["target",{"2":{"65":1}}],["take",{"2":{"65":1}}],["that",{"2":{"65":2}}],["the",{"2":{"65":4}}],["thread",{"2":{"65":4}}],["this",{"2":{"54":3,"63":4,"75":1,"77":1,"79":2}}],["t",{"2":{"48":1,"72":45,"81":16,"85":6}}],["type",{"2":{"48":7,"65":1,"85":1}}],["t2",{"2":{"42":2,"72":1,"81":8}}],["t1",{"2":{"42":3,"72":1,"81":8}}],["title",{"2":{"39":1,"48":1,"50":1,"54":1,"57":1,"59":1,"60":1,"63":1,"75":1}}],["tom",{"2":{"81":1}}],["tomcat插件",{"2":{"23":1}}],["tostring",{"2":{"77":1,"85":2}}],["tolongfunction",{"2":{"72":1}}],["tointfunction",{"2":{"72":1}}],["to",{"2":{"65":2}}],["todoublefunction",{"2":{"72":1}}],["todo",{"2":{"39":1,"48":1,"57":1,"60":1,"74":1,"75":1}}],["top",{"2":{"39":3,"43":1,"44":1,"48":2,"50":2,"52":1,"54":2,"57":2,"59":2,"60":2,"61":1,"63":2,"75":2,"76":1,"80":1}}],["实现接口的抽象方法的参数列表和返回值类型",{"2":{"81":1}}],["实现接口",{"2":{"74":1,"83":1}}],["实现三个对应不同交通工具的方法",{"2":{"61":1}}],["实现代码及输出结果如下所示",{"2":{"50":1,"59":1}}],["实现一个画图形的功能",{"2":{"48":1}}],["实现了",{"2":{"39":22}}],["实例方法",{"2":{"81":2}}],["实例方法名",{"2":{"81":2}}],["实例分析+改进",{"0":{"57":1}}],["实例b的同时实例a",{"2":{"55":1}}],["实例",{"0":{"51":1,"54":1,"55":1},"1":{"60":1,"68":1,"75":1}}],["实例2",{"2":{"38":1}}],["实例1",{"2":{"38":1}}],["实际上是在设定规范和契约",{"2":{"34":1}}],["实际项目中使用过什么设计模式",{"2":{"18":1}}],["举例",{"0":{"38":1}}],["合成复用原则",{"2":{"37":1}}],["开展各种与测试有关的度量活动",{"2":{"89":1}}],["开始考虑客户和用户的需求来建立测试目标",{"2":{"82":1}}],["开关的接口",{"2":{"74":1}}],["开闭原则",{"2":{"40":1,"57":2}}],["开闭原则ocp",{"2":{"37":1}}],["开发过程引入评审机制",{"2":{"86":1}}],["开发出的软件产品仍然会存在较多缺陷",{"2":{"78":1}}],["开发出的软件产品得不到任何质量的保证",{"2":{"73":1}}],["开发者可以自由选择开发技术",{"2":{"25":1}}],["开发工具与jvm带来了大量新特性",{"2":{"22":1}}],["开发部署方便",{"2":{"8":1}}],["里氏代换原则",{"2":{"37":1}}],["里氏替换原则说明",{"2":{"42":1}}],["里氏替换原则",{"2":{"34":1}}],["单一职责原则",{"2":{"37":1}}],["单体结构",{"0":{"8":1}}],["表示接收者",{"2":{"50":1}}],["表示将bean交给spring管理",{"2":{"36":1}}],["表达式抛出一个受检异常",{"2":{"65":1}}],["表达式",{"0":{"31":1},"1":{"38":1,"47":1,"56":1}}],["uml类图如下",{"2":{"75":1}}],["unaryoperator",{"2":{"72":1}}],["u",{"2":{"72":14,"85":2}}],["usercontroller",{"2":{"80":1}}],["user",{"2":{"80":1,"84":1}}],["userserviceimpl",{"2":{"36":2,"44":1}}],["userservice",{"2":{"36":3,"44":1,"80":3}}],["used",{"2":{"65":1}}],["url",{"2":{"62":2}}],["utf",{"2":{"44":1,"62":1,"76":1}}],["util",{"2":{"9":1,"54":2,"63":2}}],["内容如下所示",{"2":{"36":1,"70":1}}],["内聚性及可维护性",{"2":{"30":1}}],["便是解决编程中",{"2":{"34":1}}],["便于其他程序员阅读和理解",{"2":{"30":1}}],["便于并行",{"2":{"22":1}}],["便于识别",{"2":{"20":1}}],["涉及到子类的功能也有可能会出现故障",{"2":{"34":1}}],["则说明已成功运行",{"2":{"84":1}}],["则只需在drawshape",{"2":{"57":1}}],["则对应的",{"2":{"50":1}}],["则当这个类需要修改时",{"2":{"34":1}}],["则会对client发出通知",{"2":{"26":1}}],["增加对象间的耦合性",{"2":{"34":1}}],["程序稳定性更好",{"2":{"87":1}}],["程序员",{"2":{"58":1}}],["程序员面临着来自",{"2":{"30":1}}],["程序",{"2":{"42":1}}],["程序的可移植性降低",{"2":{"34":1}}],["也即",{"2":{"65":1}}],["也只需让新图形类继承shape抽象类",{"2":{"57":1}}],["也就是说",{"2":{"45":2,"65":1}}],["也带来了弊端",{"2":{"34":1}}],["也不需要协调其他团队",{"2":{"25":1}}],["继承时",{"2":{"87":1}}],["继承实际上让两个类的耦合性增加了",{"2":{"42":1}}],["继承给程序设计带来遍历的同时",{"2":{"34":1}}],["继承隐含的含义",{"2":{"34":1}}],["父类已经实现好的方法",{"2":{"34":1}}],["把更加基础的方法和成员写到base类",{"2":{"75":1}}],["把它们独立出来",{"2":{"64":1}}],["把展现的细节的任务交给他们的实现类去完成",{"2":{"33":1}}],["把应用拆分成为一个一个独立的单个服务",{"2":{"25":1}}],["细节就是具体的实现类",{"2":{"33":1}}],["细节应该依赖抽象",{"2":{"33":1}}],["中继承的思考和说明",{"0":{"34":1}}],["中",{"2":{"33":1}}],["相对于细节的多变性",{"2":{"33":1}}],["原因是",{"2":{"68":1}}],["原则",{"2":{"37":1}}],["原则的中心思想是",{"2":{"33":1}}],["原有的单个业务系统会拆分为多个可以独立开发",{"2":{"25":1}}],["倒置",{"2":{"33":1,"37":1}}],["抽象方法",{"2":{"57":1,"74":1,"79":1,"83":1}}],["抽象指的是接口或抽象类",{"2":{"33":1}}],["抽象的东西要更稳定",{"2":{"33":1}}],["抽象不应该依赖细节",{"2":{"33":1}}],["抽象类",{"2":{"33":1}}],["而lambda表达式是作为函数式接口的实例出现所有",{"2":{"81":1}}],["而且强烈依赖于代码",{"2":{"78":1}}],["而是一个陌生类",{"2":{"54":1,"63":1}}],["而出现在局部变量中的类不是直接的朋友",{"2":{"45":1}}],["而不是函数",{"2":{"65":1}}],["而不是针对实现编程",{"2":{"64":1}}],["而不是使用继承",{"2":{"46":1}}],["而不是通过修改已有代码来实现变化",{"2":{"40":1}}],["而不是依赖一个具体的子类",{"2":{"33":1}}],["而不涉及任何具体的操作",{"2":{"33":1}}],["而域名容易记住",{"2":{"20":1}}],["接着在dubbo",{"2":{"76":1}}],["接收接口",{"2":{"74":1}}],["接收消息",{"2":{"50":1}}],["接收shape对象",{"2":{"48":1,"57":1}}],["接口传递",{"0":{"74":1}}],["接口即可",{"2":{"50":1}}],["接口3",{"2":{"39":1}}],["接口2",{"2":{"39":1}}],["接口1",{"2":{"39":1}}],["接口隔离原则",{"2":{"37":1}}],["接口",{"0":{"65":1},"1":{"72":1},"2":{"33":1,"39":1}}],["接受维护项目",{"2":{"18":1}}],["如何理解函数式接口",{"2":{"65":1}}],["如何正确使用继承的原则",{"2":{"34":1}}],["如下所示",{"2":{"43":1,"52":1,"61":1,"77":1,"80":1}}],["如果b需要使用a类的方法",{"2":{"75":1}}],["如果lambda体只有一条执行语句",{"2":{"56":1}}],["如果lambda形参列表只有一个参数",{"2":{"56":1}}],["如果新增这些类",{"2":{"50":1}}],["如果对每个类型为",{"2":{"42":1}}],["如果一个类被其他的类所继承",{"2":{"34":1}}],["如",{"2":{"33":1}}],["如类a负责两个不同的职责",{"2":{"28":1}}],["二者都应该依赖其抽象",{"2":{"33":1}}],["本质上就是lambda表达式",{"2":{"81":1}}],["本质",{"2":{"31":1}}],["就存在一个缓冲层",{"2":{"87":1}}],["就是",{"2":{"40":1}}],["就是接口的实例",{"2":{"31":1}}],["就是一个线程上",{"2":{"27":1}}],["就曾经说过",{"2":{"30":1}}],["你就懂了面向对象分析和设计",{"2":{"30":1}}],["懂了设计模式",{"2":{"30":1}}],["金句",{"2":{"30":1}}],["低耦合的特性",{"2":{"30":1}}],["使得以",{"2":{"42":1}}],["使用tomcat插件启动项目",{"2":{"84":1}}],["使用lambda表达式",{"2":{"81":1}}],["使用lambda表达式可以写出更简洁更灵活的代码",{"2":{"31":1}}],["使用操作符",{"2":{"81":1}}],["使用组合仍然可以使用到a类的方法",{"2":{"75":1}}],["使用示例如下",{"2":{"72":1}}],["使用迪米特法则的改进",{"2":{"63":1}}],["使用set方法注入a的实例",{"2":{"55":1}}],["使用方就需要增加一个方法",{"2":{"57":1}}],["使用方",{"2":{"48":1,"57":3}}],["使用功能",{"2":{"48":1,"57":1}}],["使用一个类",{"2":{"43":1}}],["使用",{"2":{"39":4,"47":1}}],["使用接口或抽象类的目的是制定好规范",{"2":{"33":1}}],["使用到多种设计模式",{"2":{"24":1}}],["使程序呈现",{"2":{"30":1}}],["当要传递给lambda体的操作",{"2":{"81":1}}],["当",{"2":{"47":1}}],["当软件需要变化时",{"2":{"40":1}}],["当增加新的功能时",{"2":{"30":1}}],["当职责1需求变更而改变a时",{"2":{"28":1}}],["代码运行结果如下",{"2":{"61":1}}],["代码过长",{"2":{"54":1,"63":1}}],["代码重用性",{"2":{"30":1}}],["代码更少",{"2":{"22":1}}],["软件测试等级划分",{"0":{"66":1},"1":{"73":1,"78":1,"82":1,"86":1,"89":1}}],["软件测试是软件产品质量保证的重要措施之一",{"2":{"49":1}}],["软件测试人员比其他人做软件测试工作",{"2":{"49":1}}],["软件测试职位本来带来的价值",{"2":{"49":1}}],["软件",{"2":{"30":1}}],["软件工程中",{"2":{"18":1}}],["灵活性等多方面的挑战",{"2":{"30":1}}],["重写父类的方法",{"2":{"68":1}}],["重写的",{"2":{"60":1}}],["重写了父类的方法",{"2":{"60":1}}],["重用性",{"2":{"30":1}}],["重复功能太多",{"2":{"11":1}}],["编码完成后随意地测试和调试",{"2":{"73":1}}],["编程是一切",{"2":{"65":1}}],["编程中遵循其他原则",{"2":{"40":1}}],["编写controller",{"0":{"80":1}}],["编写service",{"0":{"36":1}}],["编写软件过程中",{"2":{"30":1}}],["编译器",{"2":{"22":1}}],["职责1和职责2",{"2":{"28":1}}],["即方法引用也是函数式接口的实例",{"2":{"81":1}}],["即与dubbo",{"2":{"76":1}}],["即迪米特法则只是要求降低类间的耦合关系",{"2":{"71":1}}],["即可解决上述的第一个报错",{"2":{"70":1}}],["即可以得到以下类图",{"2":{"39":1}}],["即新建一个接口",{"2":{"65":1}}],["即求",{"2":{"60":1,"75":1}}],["即在使用继承的过程中",{"2":{"60":1}}],["即在使用继承时",{"2":{"42":1}}],["即其他原则的目的就是为了实现",{"2":{"57":1}}],["即符合",{"2":{"57":1}}],["即符合依赖倒转原则",{"2":{"50":1}}],["即使增加新的图形",{"2":{"57":1}}],["即不但要增加对应的图形类",{"2":{"57":1}}],["即将类分解",{"2":{"52":1}}],["即有细节依赖抽象",{"2":{"50":1}}],["即重写的抽象方法的方法体",{"2":{"47":1}}],["即接口中的抽象方法的形参列表",{"2":{"47":1}}],["即负责摩托车在公路上",{"2":{"43":1}}],["即一个软件实体如类",{"2":{"40":1}}],["即一个类对自己依赖的类知道的越少越好",{"2":{"45":1}}],["即一个类对另外一个类的依赖应该建立在更小的接口上",{"2":{"32":1}}],["即一个类应该只负责一项职责",{"2":{"28":1}}],["即",{"2":{"34":1,"42":1,"65":1,"81":1}}],["即增加新的功能时",{"2":{"30":1}}],["即编程规范",{"2":{"30":1}}],["即相同功能的代码",{"2":{"30":1}}],["即维护性",{"2":{"18":1}}],["对类型为t",{"2":{"72":1}}],["对类型为t的对象进行二元运算",{"2":{"72":1}}],["对类型为t的对象进行一元运算",{"2":{"72":1}}],["对类型为t的对象应用操作",{"2":{"72":2}}],["对类型为",{"2":{"72":1}}],["对类分解的同时",{"2":{"61":1}}],["对类来说",{"2":{"28":1}}],["对方案",{"2":{"59":1}}],["对上述实现进行改进",{"2":{"57":1}}],["对扩展开放",{"2":{"57":1}}],["对象",{"2":{"54":1,"63":1,"81":2}}],["对该方案进行分析",{"2":{"50":1}}],["对应类图及实现上述功能代码如下所示",{"2":{"48":1}}],["对外除了提供的public",{"2":{"45":1}}],["对于上述代码",{"2":{"57":1}}],["对于属于接收消息范围的",{"2":{"50":1}}],["对于被依赖的类不管多么复杂",{"2":{"45":1}}],["对于类c也是同理",{"2":{"39":1}}],["对使用方",{"2":{"40":1}}],["对修改关闭",{"2":{"40":1,"57":1}}],["对提供方",{"2":{"40":1}}],["对原来功能没有影响",{"2":{"30":1}}],["对配置信息修改后",{"2":{"26":1}}],["串行流",{"2":{"27":1}}],["配置的端口为8000",{"2":{"84":1}}],["配置文件内容如下所示",{"2":{"44":1}}],["配置文件同步非常常见",{"2":{"26":1}}],["配置管理可交由zookeeper实现",{"2":{"26":1}}],["希望能够快速同步到各个节点上",{"2":{"26":1}}],["运行结果",{"2":{"57":1,"60":1}}],["运行代码结果如下",{"2":{"52":1}}],["运行代码输出结果如下",{"2":{"43":1}}],["运行的小应用",{"2":{"25":1}}],["运维",{"2":{"25":1}}],["测试用例和测试过程被管理起来",{"2":{"86":1}}],["测试成为一个可以测量和量化的过程",{"2":{"86":1}}],["测试组疲于应付",{"2":{"82":1}}],["测试不同于调试",{"2":{"78":1}}],["测试等同于调试",{"2":{"73":1}}],["测试是完全混乱无序的",{"2":{"73":1}}],["测试员",{"2":{"58":1}}],["测试",{"2":{"25":1,"39":1}}],["+",{"2":{"25":2,"43":1,"52":3,"54":2,"60":7,"61":3,"63":2,"72":2,"75":8,"77":13}}],["的字符串",{"2":{"72":1}}],["的和",{"2":{"60":1,"75":1}}],["的开闭原则",{"2":{"57":1}}],["的方式",{"2":{"46":1}}],["的子类型",{"2":{"42":1}}],["的行为没有发生变化",{"2":{"42":1}}],["的对象",{"2":{"42":2}}],["的精要",{"2":{"30":1}}],["的领域建模思想",{"2":{"25":1}}],["的组件化架构思想",{"2":{"25":1}}],["的soa服务架构思想",{"2":{"25":1}}],["的各种问题",{"2":{"18":1}}],["设计原则核心思想",{"0":{"64":1}}],["设计",{"2":{"25":1}}],["设计模式常用七大原则",{"0":{"37":1}}],["设计模式包含了面向对象的精髓",{"2":{"30":1}}],["设计模式是为了让程序",{"2":{"30":1}}],["设计模式的目的",{"0":{"30":1}}],["设计模式的重要性",{"0":{"18":1}}],["设计模式+数据结构",{"2":{"24":1}}],["设计模式在软件中哪里",{"0":{"24":1}}],["设计模式",{"2":{"18":1}}],["业务需要彻底的组件化和服务化",{"2":{"25":1}}],["功能模块",{"2":{"24":1}}],["generated",{"2":{"74":1}}],["general",{"2":{"65":1}}],["getclass",{"2":{"77":2}}],["getsalary",{"2":{"77":1}}],["getage",{"2":{"77":1}}],["getallemployee",{"2":{"54":4,"63":4}}],["getname",{"2":{"77":1,"81":6}}],["get",{"2":{"72":1,"81":3,"85":3}}],["getid",{"2":{"54":4,"63":4,"77":1}}],["getinfo",{"2":{"50":2,"59":4}}],["graphiceditor",{"2":{"48":7,"57":8}}],["groupid>top",{"2":{"70":1}}],["groupid>org",{"2":{"23":15}}],["groupid>",{"2":{"23":17,"70":1}}],["groupid>javax",{"2":{"23":2}}],["gt",{"2":{"24":3,"47":1,"56":2,"72":15}}],["==",{"2":{"48":3,"77":3}}],["=",{"2":{"24":3,"25":1,"38":8,"39":2,"43":1,"47":12,"48":4,"50":1,"52":3,"54":11,"57":1,"59":1,"60":2,"61":1,"63":11,"72":4,"74":2,"75":3,"77":23,"79":3,"81":16,"83":3,"85":9}}],["面向函数编程",{"2":{"65":1}}],["面向接口编程",{"2":{"33":1}}],["面向对象",{"0":{"34":1},"2":{"24":1}}],["面向服务的架构",{"2":{"19":1}}],["play",{"2":{"74":3,"79":3,"83":3}}],["plugin",{"2":{"23":1}}],["plugin>",{"2":{"23":2}}],["plugins>",{"2":{"23":2}}],["p>",{"2":{"65":1}}],["pom",{"2":{"44":1,"62":1}}],["port>",{"2":{"23":1}}],["port>8000",{"2":{"23":1}}],["p",{"2":{"42":2}}],["person",{"2":{"41":1,"50":7,"59":6}}],["param",{"2":{"62":8}}],["param>",{"2":{"62":4}}],["pattern>",{"2":{"62":2}}],["patternlayout",{"2":{"44":2,"76":2}}],["path>",{"2":{"23":2}}],["package=",{"2":{"44":1,"76":1}}],["package",{"2":{"39":3,"43":1,"48":2,"50":2,"52":1,"54":2,"57":2,"59":2,"60":2,"61":1,"63":2,"65":2,"75":2,"80":1}}],["public",{"2":{"36":4,"38":4,"39":31,"43":3,"47":9,"48":6,"50":4,"52":5,"54":8,"57":8,"59":6,"60":5,"61":5,"63":9,"65":4,"72":6,"74":4,"75":6,"77":1,"79":6,"80":2,"81":7,"83":1,"85":4}}],["pre2",{"2":{"81":2}}],["pre1",{"2":{"81":2}}],["pre",{"2":{"72":2}}],["predicate示例",{"2":{"72":1}}],["predicate",{"2":{"72":3}}],["private",{"2":{"54":2,"63":2,"75":1,"80":1}}],["printstream中的void",{"2":{"81":1}}],["printemployee",{"2":{"63":2}}],["printallemployee",{"2":{"54":2,"63":2}}],["println",{"2":{"38":7,"39":16,"43":1,"47":22,"48":3,"50":1,"52":3,"54":4,"57":4,"59":1,"60":6,"61":3,"63":5,"72":6,"74":1,"75":7,"79":1,"81":22,"83":1,"85":12}}],["principle",{"2":{"33":1,"39":3,"40":1,"43":1,"45":1,"48":2,"50":2,"52":1,"54":2,"57":2,"59":2,"60":2,"61":1,"63":2,"75":2}}],["properties",{"2":{"44":2,"76":2}}],["properties>",{"2":{"23":4}}],["pro的空项目",{"2":{"23":1}}],["provider",{"2":{"4":1}}],["changhong",{"2":{"74":4,"79":4,"83":4}}],["called",{"2":{"65":1}}],["causes",{"2":{"65":1}}],["create",{"2":{"65":1}}],["circle",{"2":{"48":3,"57":3}}],["closed",{"2":{"40":1}}],["classname",{"2":{"85":1}}],["class>",{"2":{"62":2}}],["class>org",{"2":{"62":2}}],["class",{"2":{"36":3,"39":10,"43":2,"48":6,"50":3,"52":4,"54":5,"57":7,"59":4,"60":3,"61":2,"63":5,"74":3,"75":4,"77":1,"79":3,"80":1,"83":3}}],["c类通过接口去依赖d类",{"2":{"39":1}}],["c",{"2":{"39":10,"44":1,"76":1}}],["code>run",{"2":{"65":2}}],["code>runnable",{"2":{"65":1}}],["code>",{"2":{"65":3}}],["code++",{"2":{"47":1}}],["collegeemployee类并不是schoolmanager类的直接朋友",{"2":{"63":1}}],["collegeemployee>",{"2":{"54":4,"63":3}}],["collegeemployee",{"2":{"54":7,"63":5}}],["collegemanager",{"2":{"54":4,"63":4}}],["com",{"2":{"62":3}}],["component",{"2":{"44":1,"76":1}}],["compareto",{"2":{"47":4,"81":3}}],["compare3",{"2":{"38":2}}],["compare2",{"2":{"38":2}}],["compare1",{"2":{"38":2}}],["compare",{"2":{"38":7,"47":5,"77":1,"81":9}}],["comparator中的int",{"2":{"81":2}}],["comparator",{"2":{"38":4,"47":5}}],["com3",{"2":{"38":2}}],["com2",{"2":{"38":2,"47":4,"81":4}}],["com1",{"2":{"38":2,"47":4,"81":4}}],["con2",{"2":{"47":2,"81":1}}],["con1",{"2":{"47":8,"81":1}}],["con",{"2":{"47":2,"72":2}}],["conversionpattern=",{"2":{"44":2,"76":2}}],["consoleappender",{"2":{"44":1,"76":1}}],["consumer中的void",{"2":{"81":1}}],["consumer示例",{"2":{"72":1}}],["consumer",{"2":{"4":1,"47":7,"72":3}}],["configuration>",{"2":{"23":2}}],["controller包即可",{"2":{"76":1}}],["controller目录报错",{"2":{"76":1}}],["controller",{"2":{"76":1,"80":2}}],["contract",{"2":{"65":1}}],["contains",{"2":{"72":2}}],["container",{"2":{"4":1}}],["contextloaderlistener",{"2":{"62":1}}],["context=",{"2":{"44":1,"76":1}}],["context",{"2":{"23":2,"44":5,"62":3,"76":5}}],["concurrent在并发编程中使用的工具包",{"2":{"9":1}}],["c++新手的区别就是前者手背上有很多伤疤",{"2":{"30":1}}],["c++老手和",{"2":{"30":1}}],["c++",{"2":{"30":1}}],["curator",{"2":{"23":4}}],["版本2",{"2":{"23":2}}],["length",{"2":{"85":2}}],["long>",{"2":{"81":2}}],["longfunction",{"2":{"72":1}}],["long",{"2":{"72":2}}],["log",{"2":{"44":1,"76":1}}],["logs",{"2":{"44":1,"76":1}}],["log4j",{"2":{"44":14,"76":14}}],["log4j12",{"2":{"23":2}}],["lt",{"2":{"72":15}}],["liskov1",{"2":{"60":2}}],["liskov",{"2":{"60":2,"75":4}}],["listener",{"2":{"62":2}}],["listener>",{"2":{"62":2}}],["list2",{"2":{"54":2,"63":2}}],["list1",{"2":{"54":2,"63":2}}],["list",{"2":{"54":15,"63":15,"72":11}}],["l",{"2":{"44":1,"76":1}}],["lang",{"2":{"65":4}}],["layout",{"2":{"44":2,"76":2}}],["layout=org",{"2":{"44":2,"76":2}}],["lambda体应该使用一对阔话包裹",{"2":{"56":1}}],["lambda体",{"2":{"47":1}}],["lambda形参列表的参数类型可以省略",{"2":{"56":1}}],["lambda形参列表",{"2":{"47":1}}],["lambda操作符",{"2":{"47":1}}],["lambda",{"0":{"31":1},"1":{"38":1,"47":1,"56":1},"2":{"47":4,"65":1}}],["lambda表达式就是一个函数式接口的实例",{"2":{"65":1}}],["lambda表达式是对象",{"2":{"65":1}}],["lambda表达式的类型是函数",{"2":{"65":1}}],["lambda表达式的本质",{"2":{"56":1}}],["lambda表达式的本质就是",{"2":{"47":3}}],["lambda表达式的本质是什么呢",{"2":{"47":3}}],["lambda表达式",{"2":{"22":1,"38":2,"47":6,"72":2}}],["日志",{"2":{"23":2}}],[">>>",{"2":{"77":1}}],[">",{"2":{"23":15,"38":2,"44":4,"47":9,"62":5,"63":1,"70":1,"72":3,"76":4,"81":7,"85":6}}],["driven",{"2":{"76":1}}],["draw",{"2":{"57":6}}],["drawtriangle",{"2":{"48":2}}],["drawcircle",{"2":{"48":2}}],["drawrectangle",{"2":{"48":2}}],["drawshape",{"2":{"48":4,"57":6}}],["doubletolongbits",{"2":{"77":1}}],["doublefunction",{"2":{"72":1}}],["double值的函数",{"2":{"72":1}}],["double",{"2":{"72":3,"77":6,"81":3}}],["double>",{"2":{"72":2}}],["documented",{"2":{"65":1}}],["dispatcherservlet",{"2":{"62":1}}],["dd",{"2":{"44":1,"76":1}}],["demeter1",{"2":{"54":2,"63":1}}],["demeter",{"2":{"45":1,"54":2,"63":3}}],["description",{"2":{"39":1,"48":1,"50":1,"54":1,"57":1,"59":1,"60":1,"63":1,"75":1}}],["dependecyinversion",{"2":{"50":1}}],["dependencypass",{"2":{"74":1,"79":1,"83":1}}],["dependencyinversion",{"2":{"50":3,"59":4}}],["dependency>",{"2":{"23":32,"70":2}}],["dependence",{"2":{"33":1}}],["dependencies>",{"2":{"23":4}}],["depend5",{"2":{"39":3}}],["depend4",{"2":{"39":3}}],["depend3",{"2":{"39":3}}],["depend2",{"2":{"39":3}}],["depend1",{"2":{"39":6}}],["date",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"75":1}}],["d类",{"2":{"39":2}}],["d",{"2":{"30":1,"39":16,"44":2,"76":2,"81":3}}],["dubb",{"2":{"23":2}}],["dubbo=",{"2":{"44":1,"76":1}}],["dubbo的起步依赖",{"2":{"23":2}}],["dubbo",{"0":{"29":1,"53":1},"1":{"36":1,"44":1,"62":1,"70":1,"76":1,"80":1},"2":{"2":1,"23":8,"25":1,"36":1,"44":8,"62":1,"76":7,"84":1}}],["dubbo是阿里巴巴公司开源的一个高性能",{"2":{"2":1}}],["07",{"2":{"60":1,"75":1}}],["09",{"2":{"59":1}}],["05",{"2":{"48":1}}],["0规范的坐标",{"2":{"23":2}}],["0",{"2":{"23":8,"44":1,"54":2,"62":1,"63":2,"70":1,"76":1,"77":2}}],["zookeeper客户端实现",{"2":{"23":4}}],["zookeeper",{"2":{"23":8}}],["zookeeper是一个开源的分布式的",{"2":{"10":1}}],["47",{"2":{"52":1}}],["43",{"2":{"47":2}}],["44",{"2":{"43":1}}],["4",{"2":{"23":2,"39":3,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"75":1}}],["7之后统一为rg",{"2":{"23":2}}],["7",{"2":{"23":6,"60":1,"75":1}}],["9",{"2":{"23":2,"60":2,"75":2}}],["1441",{"2":{"85":1}}],["1331",{"2":{"85":1}}],["1+8",{"2":{"75":1}}],["1+8=9",{"2":{"75":1}}],["1+8=",{"2":{"75":1}}],["1101",{"2":{"85":1}}],["11+3",{"2":{"75":1}}],["11+3=14",{"2":{"75":1}}],["11+3=",{"2":{"75":1}}],["11+3+9=23",{"2":{"60":1,"75":1}}],["11+3+9=",{"2":{"60":1,"75":1}}],["11",{"2":{"60":8,"75":9}}],["1010",{"2":{"81":1}}],["10",{"2":{"54":1,"63":1,"85":1}}],["1001",{"2":{"81":1}}],["100",{"2":{"25":1}}],["17",{"2":{"48":1,"54":2,"57":1,"59":1,"63":2}}],["18",{"2":{"39":1}}],["15",{"2":{"39":1,"43":1,"52":1,"61":1}}],["16",{"2":{"39":1,"50":2,"59":1,"60":1,"75":1}}],["1202",{"2":{"85":1}}],["12",{"2":{"38":1,"47":1,"81":4}}],["1",{"0":{"50":1},"2":{"23":6,"44":1,"48":2,"54":1,"59":1,"60":7,"62":1,"75":4,"76":1}}],["└─web",{"2":{"62":1}}],["└─webapp",{"2":{"62":1}}],["└─impl",{"2":{"44":1}}],["└─inspectionprofiles",{"2":{"23":1}}],["└─spring",{"2":{"44":1,"76":1}}],["└─service",{"2":{"44":1}}],["└─src",{"2":{"23":2,"44":1,"62":1}}],["└─ytazwc",{"2":{"44":1}}],["└─top",{"2":{"44":1}}],["└─test",{"2":{"23":2,"62":1}}],["└─dubbo",{"2":{"23":1}}],["└─java",{"2":{"23":2,"62":1}}],["└─resources",{"2":{"23":2,"44":1}}],["│",{"2":{"23":11,"44":46,"62":8,"76":2}}],["├─resources",{"2":{"62":1,"76":1}}],["├─java",{"2":{"23":2,"44":1,"62":1}}],["├─main",{"2":{"23":2,"44":1,"62":1}}],["├─dubbo",{"2":{"23":1}}],["├─",{"2":{"23":1}}],["目标是表明软件符合其技术规范",{"2":{"78":1}}],["目标是表明软件是奏效的",{"2":{"73":1}}],["目录结构如下所示",{"2":{"23":1}}],["目前程序员门槛越来越高",{"2":{"18":1}}],["并返回t类型的结果",{"2":{"72":2}}],["并返回boolean值",{"2":{"72":1}}],["并返回结果",{"2":{"72":1}}],["并不是要求完全没有依赖关系",{"2":{"71":1}}],["并在main目录下新建webapp目录",{"2":{"62":1}}],["并实现draw方法即可",{"2":{"57":1}}],["并提供一个抽象的draw方法",{"2":{"57":1}}],["并且可以有返回值",{"2":{"47":1}}],["并且修改后",{"2":{"34":1}}],["并用不同的线程分别处理每个数据块的流",{"2":{"27":1}}],["并行流就是把一个内容分为多个数据块",{"2":{"27":1}}],["并行流和串行流",{"0":{"27":1}}],["并新建dubbo",{"2":{"23":1}}],["并通过这些服务之间定义良好的接口和契约联系起来",{"2":{"19":1}}],["允许jvm上运行js应用",{"2":{"22":1}}],["o",{"2":{"77":5}}],["of",{"2":{"65":1}}],["object",{"2":{"65":2,"77":1}}],["othergraphic",{"2":{"57":2}}],["ocp",{"2":{"48":2,"57":2}}],["o2",{"2":{"38":4,"42":2,"47":10}}],["o1",{"2":{"38":4,"42":2,"47":10}}],["out",{"2":{"38":7,"39":16,"43":1,"47":22,"48":3,"50":1,"52":3,"54":4,"57":4,"59":1,"60":6,"61":3,"63":5,"72":6,"74":1,"75":7,"79":1,"81":21,"83":1,"85":12}}],["override",{"2":{"36":1,"38":2,"47":3,"57":4,"59":2,"72":2,"74":1,"77":3,"79":1,"83":1}}],["oop",{"2":{"65":1}}],["ooa",{"2":{"30":1}}],["oo",{"0":{"34":1},"2":{"24":1}}],["openandclose",{"2":{"74":3,"79":4,"83":3}}],["openclose",{"2":{"48":2,"57":2}}],["open",{"2":{"40":1,"74":3,"79":3,"83":3}}],["operation5",{"2":{"39":11}}],["operation4",{"2":{"39":11}}],["operation3",{"2":{"39":11}}],["operation2",{"2":{"39":11}}],["operation1",{"2":{"39":16}}],["opoo",{"2":{"23":1}}],["optional类",{"0":{"90":1},"2":{"22":1}}],["oriented",{"2":{"19":1}}],["org",{"2":{"2":1,"44":10,"62":1,"76":13}}],["速度更快",{"2":{"22":1}}],["为了交互对象之间的松耦合设计而努力",{"2":{"64":1}}],["为什么需要软件测试",{"0":{"49":1}}],["为java语言",{"2":{"22":1}}],["为分布式框架提供协调服务的apache项目",{"2":{"10":1}}],["简介",{"0":{"22":1},"1":{"27":1}}],["简单的说",{"2":{"65":1}}],["简单",{"2":{"8":1,"50":1}}],["iopenandclose",{"2":{"74":2,"79":2,"83":2}}],["itv接口",{"2":{"74":1,"79":1,"83":1}}],["itv",{"2":{"74":4,"79":4,"83":5}}],["it",{"2":{"65":1}}],["is",{"2":{"65":2}}],["i++",{"2":{"54":2,"63":2}}],["id=",{"2":{"77":1}}],["id",{"2":{"54":11,"63":11,"77":18,"85":4}}],["idea",{"2":{"23":1}}],["idea工具熟练",{"2":{"12":1}}],["ireceiver",{"2":{"50":3,"59":4}}],["if判断",{"2":{"57":1}}],["if",{"2":{"48":3,"72":1}}],["iask",{"2":{"44":1,"76":1}}],["implementing",{"2":{"65":1}}],["implements",{"2":{"36":1,"39":4,"59":2,"74":2,"79":2,"83":2}}],["import",{"2":{"54":2,"63":2,"65":1}}],["improve",{"2":{"39":1,"57":2,"59":2,"63":1,"75":2}}],["i",{"2":{"39":24,"54":6,"63":6}}],["in",{"2":{"65":1}}],["init",{"2":{"62":2}}],["inf",{"2":{"62":2}}],["instance",{"2":{"44":1,"62":1,"76":1}}],["intfunction",{"2":{"72":1}}],["intlongdouble",{"2":{"72":2}}],["int",{"2":{"38":4,"47":1,"48":1,"54":2,"60":9,"63":2,"75":12,"77":12}}],["integer中的int",{"2":{"81":1}}],["integer",{"2":{"38":5,"47":2,"81":2,"85":6}}],["integer>",{"2":{"38":4,"47":5,"81":2}}],["interface3",{"2":{"39":4}}],["interface2",{"2":{"39":4}}],["interface1",{"2":{"39":14}}],["interface",{"2":{"36":1,"39":4,"59":1,"65":4,"74":2,"79":2,"83":2}}],["inversion",{"2":{"33":1}}],["ip不容易记住",{"2":{"20":1}}],["例如",{"2":{"20":1}}],["经常需要对应用",{"2":{"20":1}}],["在整个软件生存周期中没有建立正式的评审程序",{"2":{"82":1}}],["在需求和设计中没有测试",{"2":{"78":1}}],["在pom文件中",{"2":{"70":1}}],["在实际编程中",{"2":{"68":1}}],["在将函数作为一等公民的编程语言中",{"2":{"65":1}}],["在函数式编程语言当中",{"2":{"65":1}}],["在java目录下",{"2":{"80":1}}],["在java8中",{"2":{"65":2}}],["在java里面面向对象",{"2":{"65":1}}],["在java中的lang包中存在的一个函数式接口",{"2":{"65":1}}],["在该目录下创建web",{"2":{"62":1}}],["在水中上运行",{"2":{"61":2}}],["在天空上运行",{"2":{"61":2}}],["在上述类图的基础上",{"2":{"48":1}}],["在公路上运行",{"2":{"43":4,"61":2}}],["在适当的情况下",{"2":{"42":1}}],["在子类中尽量不要重写父类的方法",{"2":{"42":1}}],["在所有的对象",{"2":{"42":1}}],["在top",{"2":{"36":1}}],["在",{"2":{"33":1}}],["在其巨著",{"2":{"30":1}}],["在dubbo",{"2":{"23":2,"36":1}}],["在分布式环境下",{"2":{"20":1,"26":1}}],["在多个单体架构中",{"2":{"11":1}}],["统一配置管理",{"0":{"26":1}}],["统一命名服务",{"0":{"20":1}}],["统计服务的调用次数和调用时间的监控中心",{"2":{"4":1}}],["监控告急等等",{"2":{"19":1}}],["异常处理",{"2":{"19":1}}],["流量控制",{"2":{"19":1}}],["负载均衡",{"2":{"19":1}}],["主要针对情况1和情况2",{"2":{"81":1}}],["主要通过方法的名字来指向一个方法",{"2":{"81":1}}],["主要是提供了一个服务于服务之间的交互",{"2":{"19":1}}],["主要为学习各种开发技术专用",{"2":{"14":1}}],["企业服务总线",{"2":{"19":1}}],["equals",{"2":{"77":2,"81":3}}],["elementtype",{"2":{"65":1}}],["else",{"2":{"48":2}}],["executing",{"2":{"65":1}}],["extends",{"2":{"48":3,"57":4,"60":1,"75":2}}],["e",{"2":{"54":4,"63":4,"81":2}}],["emp",{"2":{"54":6,"63":6,"81":6}}],["employee中的string",{"2":{"81":2}}],["employee>",{"2":{"54":4,"63":4,"85":6}}],["employee",{"2":{"54":5,"63":5,"77":13,"81":5,"85":6}}],["email",{"2":{"50":6,"59":2}}],["encoding=",{"2":{"44":1,"62":1,"76":1}}],["enterparise",{"2":{"19":1}}],["effective",{"2":{"30":1}}],["esb",{"2":{"19":2}}],["进行优化",{"2":{"59":1}}],["进行拆分",{"2":{"19":1}}],["进程了解",{"2":{"12":1}}],["是以局部变量方式出现在",{"2":{"54":1}}],["是类型",{"2":{"42":1}}],["是编程中最基础",{"2":{"40":1}}],["是指",{"2":{"33":1}}],["是一个匿名函数",{"2":{"31":1}}],["是一个组件模型",{"2":{"19":1}}],["是soa时代的产物",{"2":{"25":1}}],["是对软件设计中普遍存在",{"2":{"18":1}}],["abm",{"2":{"81":1}}],["abd",{"2":{"81":3}}],["abc",{"2":{"81":4}}],["abstract",{"2":{"57":2,"65":1}}],["age=",{"2":{"77":1}}],["age",{"2":{"77":12}}],["auto",{"2":{"74":1}}],["author",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"75":1}}],["aslist",{"2":{"72":1}}],["adouble",{"2":{"72":2}}],["add",{"2":{"54":2,"63":2,"72":1}}],["action",{"2":{"65":1}}],["accept",{"2":{"47":7,"72":4,"81":3}}],["annotation",{"2":{"65":1,"76":1}}],["any",{"2":{"65":1}}],["an",{"2":{"65":1}}],["a类",{"2":{"60":1,"75":1}}],["a类通过接口去依赖b类",{"2":{"39":1}}],["a作为b类的成员变量",{"2":{"55":2}}],["airvehicle",{"2":{"52":5}}],["a",{"2":{"39":10,"60":7,"65":1,"72":2,"75":12}}],["a2",{"2":{"28":1}}],["arr1",{"2":{"85":2}}],["arrays",{"2":{"72":1,"85":2}}],["arraylist",{"2":{"54":3,"63":3,"72":1}}],["args",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"74":1,"75":1,"79":1,"83":1}}],["artifactid>tomcat9",{"2":{"23":1}}],["artifactid>curator",{"2":{"23":4}}],["artifactid>dubbo",{"2":{"23":2,"70":1}}],["artifactid>slf4j",{"2":{"23":4}}],["artifactid>spring",{"2":{"23":4}}],["artifactid>",{"2":{"23":17,"70":1}}],["artifactid>javax",{"2":{"23":2}}],["architecture",{"2":{"19":1}}],["apply",{"2":{"72":4,"81":6,"85":9}}],["applicationcontext",{"2":{"44":2,"62":2}}],["app>",{"2":{"62":1}}],["app",{"2":{"62":2}}],["appender",{"2":{"44":7,"76":7}}],["api",{"0":{"88":1},"2":{"22":1,"23":4,"25":1}}],["apache",{"2":{"2":1,"23":8,"44":7,"76":7}}],["s2",{"2":{"81":4}}],["s1",{"2":{"81":4}}],["salary=",{"2":{"77":1}}],["salary",{"2":{"77":12}}],["sayhello即可",{"2":{"84":1}}],["sayhello",{"2":{"36":2,"80":3}}],["snapshot",{"2":{"70":1}}],["sup2",{"2":{"81":1,"85":2}}],["sup1",{"2":{"81":3,"85":2}}],["supplier中的t",{"2":{"81":1,"85":1}}],["supplier",{"2":{"72":1,"85":2}}],["super",{"2":{"48":3}}],["sun",{"2":{"62":3}}],["sub",{"2":{"54":2,"63":2}}],["shape",{"2":{"48":8,"57":6}}],["s",{"2":{"47":12,"48":7,"57":2,"65":1,"72":7,"81":2}}],["scala等语言的兴起和新技术的挑战",{"2":{"65":1}}],["scan",{"2":{"44":1,"76":1}}],["schoolmanager的直接朋友",{"2":{"54":1}}],["schoolmanager",{"2":{"54":8,"63":7}}],["schemalocation=",{"2":{"44":1,"62":1,"76":1}}],["schema",{"2":{"44":9,"76":12}}],["scott",{"2":{"30":1}}],["scope>",{"2":{"23":2}}],["scope>provided",{"2":{"23":2}}],["ss",{"2":{"44":1,"76":1}}],["singleresponsibility3",{"2":{"61":1}}],["singleresponsibility2",{"2":{"52":1}}],["singleresponsibility1",{"2":{"43":1}}],["singleresponsibility",{"2":{"43":1,"52":1,"61":1}}],["stub",{"2":{"74":1}}],["starting",{"2":{"65":1}}],["static",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"74":1,"75":1,"79":1,"83":1}}],["stdout=org",{"2":{"44":1,"76":1}}],["stdout",{"2":{"44":3,"76":3}}],["string中的boolean",{"2":{"81":1}}],["string中的int",{"2":{"81":1}}],["stringlist",{"2":{"72":2}}],["string>",{"2":{"47":7,"72":8,"81":10}}],["string",{"2":{"36":2,"39":1,"43":2,"47":3,"48":1,"50":2,"52":4,"54":7,"57":1,"59":4,"60":1,"61":4,"63":7,"72":2,"74":1,"75":1,"77":6,"79":1,"80":1,"81":4,"83":1,"85":7}}],["stream",{"0":{"88":1},"2":{"22":1}}],["settv",{"2":{"83":3}}],["setter",{"0":{"83":1}}],["setsalary",{"2":{"77":1}}],["setage",{"2":{"77":1}}],["setname",{"2":{"77":1}}],["setid",{"2":{"54":4,"63":4,"77":1}}],["see",{"2":{"65":1}}],["separately",{"2":{"65":1}}],["segregation1",{"2":{"39":3}}],["segregation",{"2":{"39":3}}],["servlet>",{"2":{"62":2}}],["servlet",{"2":{"23":4,"62":9}}],["servlet3",{"2":{"23":2}}],["servce",{"2":{"19":1}}],["service依赖",{"0":{"70":1}}],["service模块添加配置文件类似",{"2":{"76":1}}],["service模块目录结构如下",{"2":{"44":1}}],["service模块中导入spring的配置文件",{"2":{"44":1}}],["service模块中",{"2":{"36":1}}],["service模块",{"0":{"29":1},"1":{"36":1,"44":1},"2":{"62":1,"84":1}}],["service模块导入如下依赖",{"2":{"23":1}}],["service和dubbo",{"2":{"23":1}}],["service",{"2":{"19":1,"23":1,"36":1,"44":2,"70":2}}],["system",{"2":{"38":7,"39":16,"43":1,"47":22,"48":3,"50":1,"52":3,"54":4,"57":4,"59":1,"60":6,"61":3,"63":5,"72":6,"75":7,"81":2,"85":12}}],["slf4j",{"2":{"23":4}}],["springmvc",{"2":{"62":3,"76":2}}],["springmvc的坐标",{"2":{"23":2}}],["springcloud是微服务时代的产物",{"2":{"25":1}}],["springframework",{"2":{"23":4,"44":6,"62":2,"76":9}}],["spring的坐标",{"2":{"23":2}}],["spring",{"2":{"23":8,"44":2,"62":2,"76":3}}],["soa架构",{"0":{"19":1}}],["soap协议",{"2":{"15":1}}],["soa",{"2":{"2":1,"19":1,"25":1}}],["怎么使用的",{"2":{"18":1}}],["大厂提问",{"2":{"18":1}}],["规范性",{"2":{"18":1}}],["所以启动后",{"2":{"84":1}}],["所以以前用",{"2":{"65":1}}],["所以会爆红",{"2":{"62":1}}],["所以会出现爆红",{"2":{"62":1}}],["所以才会如此复杂",{"2":{"57":1}}],["所以根据依赖倒转原则进行分析",{"2":{"50":1}}],["所以需要在pow文件声明打包为war",{"2":{"62":1}}],["所以需要在dubbo",{"2":{"44":1}}],["所以需要将类a的粒度分解为a1",{"2":{"28":1}}],["所以我们可以将接口interface1拆分为几个接口",{"2":{"39":1}}],["所有测试都是基于执行的",{"2":{"78":1}}],["所有的引用基类的地方必须能透明的使用其子类的对象",{"2":{"42":1}}],["所有节点的配置信息是一致的",{"2":{"26":1}}],["所有消费方都需要变更",{"2":{"15":1}}],["所提出的解决方案",{"2":{"18":1}}],["反复出现",{"2":{"18":1}}],["图解+框架源码剖析",{"2":{"17":1}}],["尚硅谷java设计模式",{"2":{"17":1}}],["提供的服务",{"2":{"16":1}}],["提高类的可读性",{"2":{"69":1}}],["提高",{"2":{"1":1}}],["hashcode",{"2":{"77":2}}],["happytime",{"2":{"72":3}}],["hh",{"2":{"44":1,"76":1}}],["hello",{"2":{"36":1,"50":2,"59":4,"84":1}}],["hession等等",{"2":{"15":1}}],["https",{"2":{"44":1,"76":1}}],["http",{"2":{"2":1,"15":1,"44":9,"62":4,"76":12}}],["比如使用继承会给程序带来侵入性",{"2":{"34":1}}],["比如kafka集群",{"2":{"26":1}}],["比如",{"2":{"15":1}}],["远程过程调用",{"2":{"15":1}}],["远程服务调用方案",{"2":{"2":1}}],["以下面uml类图为例",{"2":{"55":1}}],["以交通工具运行为例",{"2":{"35":1}}],["以抽象为基础搭建的架构比以细节为基础搭建的架构要更稳定",{"2":{"33":1}}],["以实现服务的共享和重用",{"2":{"15":1}}],["以及使用设计模式的目的",{"2":{"40":1}}],["以及",{"2":{"2":1}}],["将数组看做是一个特殊的类",{"2":{"85":1}}],["将测试看做专业化的活动",{"2":{"82":1}}],["将测试集成到整个软件生存周期",{"2":{"82":1}}],["将测试定义为编码完成后的阶段和工作",{"2":{"78":1}}],["将类",{"2":{"81":1}}],["将shape类改为抽象类",{"2":{"57":1}}],["将a作为b类方法的参数",{"2":{"55":1}}],["将交通工具类的不同",{"2":{"52":1}}],["将该类进行拆分",{"2":{"43":1}}],["将代码像数据一样进行传递",{"2":{"31":1}}],["将公共业务模块抽取出来",{"2":{"15":1}}],["将单体架构中的多个模块拆分为多个独立的项目",{"2":{"11":1}}],["介绍",{"0":{"14":1}}],["工作机制",{"0":{"13":1}}],["有如下三种主要使用情况",{"2":{"81":1}}],["有所不同",{"2":{"65":1}}],["有三种",{"2":{"55":1}}],["有一个学校",{"2":{"54":1}}],["有一定线程",{"2":{"12":1}}],["有非常多的协议和技术都实现了rpc的过程",{"2":{"15":1}}],["有java基础",{"2":{"12":1}}],["了解java新特性",{"2":{"12":1}}],["垂直架构是指",{"2":{"11":1}}],["垂直架构",{"0":{"11":1}}],["概述",{"0":{"10":1},"1":{"13":1,"16":1,"20":1,"26":1}}],["概念",{"0":{"2":1}}],["指定加载的配置文件",{"2":{"62":1}}],["指",{"2":{"9":1}}],["性能低",{"2":{"8":1}}],["可维护性",{"2":{"69":1}}],["可以度量和优化产品质量",{"2":{"89":1}}],["可以把构造器引用赋值给定义的方法",{"2":{"85":1}}],["可以把lambda表达式理解为一段可以传递的代码",{"2":{"31":1}}],["可以认为方法引用就是lambda表达式的一个语法糖",{"2":{"81":1}}],["可以使用方法引用",{"2":{"81":1}}],["可以使用组合关系",{"2":{"75":1}}],["可以解决web",{"2":{"76":1}}],["可以加上",{"2":{"65":1}}],["可以省略",{"2":{"56":2}}],["可以通过聚合",{"2":{"42":1}}],["可以发现运行正常的相减功能发生错误",{"2":{"68":1}}],["可以发现",{"2":{"39":1}}],["可以查看下面的实现代码",{"2":{"39":1}}],["可以很大程度上提高程序的执行效率",{"2":{"27":1}}],["可靠性",{"2":{"30":1}}],["可靠性差",{"2":{"8":1}}],["可扩展性",{"2":{"30":1}}],["可扩展性和可维护性差",{"2":{"8":1}}],["可能是",{"2":{"60":1}}],["可能是return语句",{"2":{"56":1}}],["可能还以为调用的是父类的func1方法",{"2":{"60":1}}],["可能意识的重写了父类的方法",{"2":{"60":1}}],["可能会对整个继承体系造成破坏",{"2":{"34":1}}],["可能造成职责2执行错误",{"2":{"28":1}}],["可能存在重复模块",{"2":{"11":1}}],["可将配置信息写入zookeeper上的一个znode",{"2":{"26":1}}],["可读性",{"2":{"18":1,"30":1}}],["可伸缩性差",{"2":{"8":1}}],["可伸缩",{"2":{"1":1}}],["项目经理",{"2":{"58":1}}],["项目启动慢",{"2":{"8":1}}],["项目架构目标",{"0":{"1":1}}],["缺点",{"2":{"8":1}}],["小型项目首选",{"2":{"8":1}}],["mvc",{"2":{"76":5}}],["mvc=",{"2":{"76":1}}],["money",{"2":{"72":2}}],["monitor",{"2":{"4":1}}],["myinterface",{"2":{"65":1}}],["mysql是怎样运行的",{"2":{"7":1}}],["method1",{"2":{"65":1}}],["method",{"2":{"65":2,"74":1}}],["mm",{"2":{"44":2,"76":2}}],["m",{"2":{"44":2,"48":7,"76":2}}],["math",{"2":{"81":2}}],["math中的long",{"2":{"81":1}}],["may",{"2":{"65":1}}],["mayers",{"2":{"30":1}}],["mapping>",{"2":{"62":2}}],["main",{"2":{"39":1,"43":1,"48":1,"50":1,"52":1,"54":1,"57":1,"59":1,"60":1,"61":1,"63":1,"74":1,"75":1,"79":1,"83":1}}],["maven",{"2":{"23":2}}],["jerry",{"2":{"81":1}}],["juc入门",{"2":{"12":1}}],["juc是什么",{"0":{"9":1}}],["juc并发编程",{"2":{"6":1}}],["java中四大核心函数式接口",{"2":{"72":1}}],["java内置函数式接口",{"0":{"72":1}}],["java不但可以支持oop还可以支持oof",{"2":{"65":1}}],["java不得不做出调整以便支持更加广泛的技术要求",{"2":{"65":1}}],["java从诞生日起就是一直倡导",{"2":{"65":1}}],["javaee",{"2":{"62":3}}],["java8",{"2":{"22":1}}],["java8新特性",{"2":{"12":1}}],["java",{"2":{"2":1,"9":1,"15":1,"33":1,"44":2,"54":2,"62":3,"63":2,"65":4}}],["round",{"2":{"81":3}}],["roadvehicle",{"2":{"52":6}}],["rootlogger=info",{"2":{"44":1,"76":1}}],["r",{"2":{"48":2,"72":11}}],["r2",{"2":{"38":2,"47":2}}],["runtime",{"2":{"65":1}}],["runair",{"2":{"61":2}}],["runwater",{"2":{"61":2}}],["run",{"2":{"38":3,"43":4,"47":3,"52":6,"61":2,"65":2}}],["runnable",{"2":{"38":3,"47":3,"65":1}}],["r1",{"2":{"38":2,"47":2}}],["rmi规范",{"2":{"15":1}}],["requestmapping",{"2":{"80":2}}],["resource",{"2":{"80":1}}],["restcontroller",{"2":{"80":1}}],["rest风格",{"2":{"15":1}}],["result",{"2":{"77":5}}],["retentionpolicy",{"2":{"65":1}}],["retention",{"2":{"65":1}}],["return",{"2":{"36":1,"38":1,"47":4,"50":1,"54":4,"59":2,"60":3,"63":4,"72":2,"75":4,"80":1}}],["receiver",{"2":{"59":2}}],["receive",{"2":{"50":2,"59":3}}],["rectangle",{"2":{"48":3,"57":3}}],["recipes",{"2":{"23":2}}],["release",{"2":{"23":2}}],["registry",{"2":{"4":1}}],["rpc",{"2":{"2":2,"15":1}}],["服务之间交互一般使用rest",{"2":{"25":1}}],["服务实现组件化",{"2":{"25":1}}],["服务器集群",{"2":{"24":1}}],["服务进行统一命名",{"2":{"20":1}}],["服务的监控",{"2":{"19":1}}],["服务中介",{"2":{"19":1}}],["服务提供方一旦产生变更",{"2":{"15":1}}],["服务注册与发现的注册中心",{"2":{"4":1}}],["服务运行容器",{"2":{"4":1}}],["服务治理方案",{"2":{"2":1}}],["暴露服务的服务提供方",{"2":{"4":1}}],["节点角色说明",{"2":{"4":1}}],["架构演进",{"0":{"5":1},"1":{"8":1,"11":1,"15":1,"19":1,"25":1}}],["架构",{"0":{"4":1},"2":{"24":1}}],["分别计算int",{"2":{"72":1}}],["分别部署在不同的机器上",{"2":{"3":1}}],["分析+解决办法",{"0":{"63":1}}],["分析问题",{"2":{"54":1}}],["分析",{"2":{"52":1,"54":1,"61":1,"63":2}}],["分解成不同的类",{"2":{"43":1,"52":1}}],["分布式架构是指在垂直架构的基础上",{"2":{"15":1}}],["分布式架构",{"0":{"15":1}}],["分布式",{"2":{"3":1}}],["拆分为小的业务模块",{"2":{"3":1}}],["干不一样的事",{"2":{"3":1}}],["干一样的事情",{"2":{"3":1}}],["部署在多台服务器上",{"2":{"3":1}}],["一般解决办法是",{"2":{"68":1}}],["一切皆对象",{"2":{"65":1}}],["一旦znode中的数据发生修改",{"2":{"26":1}}],["一边要求一个集群中",{"2":{"26":1}}],["一个类只负责一种职责",{"2":{"69":1}}],["一个类对于另一个类的依赖应该建立在最小接口上",{"2":{"39":1}}],["一个是spring",{"2":{"62":1}}],["一个对象应该对其他对象保持最少的了解",{"2":{"45":1}}],["一个大的业务系统",{"2":{"3":1}}],["一个业务模块",{"2":{"3":1}}],["一起",{"2":{"3":2}}],["人们掌握了一定的测试技术和方法",{"2":{"78":1}}],["人",{"2":{"3":2}}],["quot",{"2":{"3":4,"81":2,"84":2}}],["很多",{"2":{"3":2}}],["官网",{"2":{"2":1}}],["致力于提供高性能和透明化的",{"2":{"2":1}}],["框架",{"2":{"2":1,"24":1}}],["轻量级的",{"2":{"2":1}}],["快速响应",{"2":{"1":1}}],["快速的访问体验",{"2":{"1":1}}],["随需应变",{"2":{"1":1}}],["敏捷性",{"2":{"1":1}}],["系统间耦合低",{"2":{"1":1}}],["减少",{"2":{"1":1}}],["网站服务一直可以正常访问",{"2":{"1":1}}],["高层模块不应该依赖底层模块",{"2":{"33":1}}],["高内聚",{"2":{"30":1}}],["高可扩展",{"2":{"1":1}}],["高可用",{"2":{"1":1}}],["高性能",{"2":{"1":1}}],["画类图",{"0":{"0":1}}]],"serializationVersion":2}';export{e as default};
