import{_ as e,o as t,c as a,e as i}from"./app-B7ogrsIA.js";const l={},n=i('<h2 id="第一份" tabindex="-1"><a class="header-anchor" href="#第一份"><span>第一份</span></a></h2><h3 id="jvm内存结构" tabindex="-1"><a class="header-anchor" href="#jvm内存结构"><span>JVM内存结构</span></a></h3><p><img src="https://github.com/YTAZWC/picx-images-hosting/raw/master/杂记/image.syqy7uz7z.webp" alt="JVM内存结构"></p><ul><li>堆（Heap）：线程共享。所有的对象实例以及数组都要在堆上分配。回收器主要管理的对象。</li><li>方法区（Method Area）：线程共享。存储类信息、常量、静态变量、即时编译器编译后的代码。</li><li>方法栈（JVM Stack）：线程私有。存储局部变量表、操作栈、动态链接、方法出口，对象指针。</li><li>本地方法栈（Native Method Stack）：线程私有。为虚拟机使用到的Native 方法服务。如Java使用c或者c++编写的接口服务时，代码在此区运行。</li><li>程序计数器（Program Counter Register）：线程私有。有些文章也翻译成PC寄存器（PC Register），同一个东西。它可以看作是当前线程所执行的字节码的行号指示器。指向下一条要执行的指令</li></ul><h3 id="jdk8新特性" tabindex="-1"><a class="header-anchor" href="#jdk8新特性"><span>jdk8新特性</span></a></h3><p>Lambda表达式,Stream API, 函数式接口, Optional类</p><h3 id="接口与抽象类的区别" tabindex="-1"><a class="header-anchor" href="#接口与抽象类的区别"><span>接口与抽象类的区别</span></a></h3><p>接口主要是对类的行为进行约束, 实现某个接口便会有对应的行为,抽象类主要是对代码复用,强调所属关系</p><p>一个类只能继承一个类，但是可以实现多个接口</p><p>接口中的成员变量只能是<code>public static final</code>类型, 不能被修改且必须有初始值, 而抽象类的成员变量默认是default, 可以在子类重新定义,也可以被赋值</p><h3 id="finally一定会执行吗" tabindex="-1"><a class="header-anchor" href="#finally一定会执行吗"><span>finally一定会执行吗</span></a></h3><p>不一定, 在某些情况下, finally的代码不会被执行,比如说finally执行前,终止Java虚拟机的运行,finally便不会被执行.</p><p>同时在以下两种特殊情况,也不会被执行:</p><ol><li>程序所在线程死亡</li><li>关闭CPU</li></ol><h3 id="执行一条sql会发生什么" tabindex="-1"><a class="header-anchor" href="#执行一条sql会发生什么"><span>执行一条sql会发生什么</span></a></h3><ol><li>连接器;建立连接,管理连接,校验用户身份</li><li>查询</li></ol><h3 id="为什么不推荐使用join" tabindex="-1"><a class="header-anchor" href="#为什么不推荐使用join"><span>为什么不推荐使用join</span></a></h3><ol><li>大量数据的情况下, JOIN语句可能导致查询速度下降</li><li>JOIN语句可能会导致MySQL服务器的负载增加</li></ol><h3 id="什么是聚簇索引-什么是非聚簇索引" tabindex="-1"><a class="header-anchor" href="#什么是聚簇索引-什么是非聚簇索引"><span>什么是聚簇索引，什么是非聚簇索引</span></a></h3><p>数据库表的索引从数据存储方式上可以分为聚簇索引和非聚簇索引两种;</p><ul><li>聚簇索引（Clustered Index）即索引结构和数据一起存放的索引，并不是一种单独的索引类型。InnoDB 中的主键索引就属于聚簇索引。</li><li>非聚簇索引(Non-Clustered Index)即索引结构和数据分开存放的索引，并不是一种单独的索引类型。二级索引(辅助索引)就属于非聚簇索引。MySQL 的 MyISAM 引擎，不管主键还是非主键，使用的都是非聚簇索引</li></ul><h3 id="mvcc机制" tabindex="-1"><a class="header-anchor" href="#mvcc机制"><span>MVCC机制</span></a></h3><p>https://blog.csdn.net/qq_41361506/article/details/108538702</p><p>MVCC (Multiversion Concurrency Control) 中文全程叫多版本并发控制，是现代数据库（包括 MySQL、Oracle、PostgreSQL 等）引擎实现中常用的处理读写冲突的手段，目的在于提高数据库高并发场景下的吞吐性能。</p>',24),r=[n];function o(c,s){return t(),a("div",null,r)}const d=e(l,[["render",o],["__file","index.html.vue"]]),h=JSON.parse(`{"path":"/article/hltd1r0l/","title":"小厂面经","lang":"zh-CN","frontmatter":{"title":"小厂面经","author":"花木凋零成兰","tags":["面试","实习","小厂"],"createTime":"2024/04/25 22:07:47","permalink":"/article/hltd1r0l/","description":"第一份 JVM内存结构 JVM内存结构 堆（Heap）：线程共享。所有的对象实例以及数组都要在堆上分配。回收器主要管理的对象。 方法区（Method Area）：线程共享。存储类信息、常量、静态变量、即时编译器编译后的代码。 方法栈（JVM Stack）：线程私有。存储局部变量表、操作栈、动态链接、方法出口，对象指针。 本地方法栈（Native Met...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://ytazwc.top/blogs/article/hltd1r0l/"}],["meta",{"property":"og:site_name","content":"花木凋零成兰"}],["meta",{"property":"og:title","content":"小厂面经"}],["meta",{"property":"og:description","content":"第一份 JVM内存结构 JVM内存结构 堆（Heap）：线程共享。所有的对象实例以及数组都要在堆上分配。回收器主要管理的对象。 方法区（Method Area）：线程共享。存储类信息、常量、静态变量、即时编译器编译后的代码。 方法栈（JVM Stack）：线程私有。存储局部变量表、操作栈、动态链接、方法出口，对象指针。 本地方法栈（Native Met..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/YTAZWC/picx-images-hosting/raw/master/杂记/image.syqy7uz7z.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T07:23:07.000Z"}],["meta",{"property":"article:author","content":"花木凋零成兰"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"实习"}],["meta",{"property":"article:tag","content":"小厂"}],["meta",{"property":"article:modified_time","content":"2024-04-27T07:23:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"小厂面经\\",\\"image\\":[\\"https://github.com/YTAZWC/picx-images-hosting/raw/master/杂记/image.syqy7uz7z.webp\\"],\\"dateModified\\":\\"2024-04-27T07:23:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"花木凋零成兰\\"}]}"]]},"headers":[{"level":2,"title":"第一份","slug":"第一份","link":"#第一份","children":[{"level":3,"title":"JVM内存结构","slug":"jvm内存结构","link":"#jvm内存结构","children":[]},{"level":3,"title":"jdk8新特性","slug":"jdk8新特性","link":"#jdk8新特性","children":[]},{"level":3,"title":"接口与抽象类的区别","slug":"接口与抽象类的区别","link":"#接口与抽象类的区别","children":[]},{"level":3,"title":"finally一定会执行吗","slug":"finally一定会执行吗","link":"#finally一定会执行吗","children":[]},{"level":3,"title":"执行一条sql会发生什么","slug":"执行一条sql会发生什么","link":"#执行一条sql会发生什么","children":[]},{"level":3,"title":"为什么不推荐使用join","slug":"为什么不推荐使用join","link":"#为什么不推荐使用join","children":[]},{"level":3,"title":"什么是聚簇索引，什么是非聚簇索引","slug":"什么是聚簇索引-什么是非聚簇索引","link":"#什么是聚簇索引-什么是非聚簇索引","children":[]},{"level":3,"title":"MVCC机制","slug":"mvcc机制","link":"#mvcc机制","children":[]}]}],"isBlogPost":true,"readingTime":{"minutes":2.66,"words":799},"git":{"updatedTime":1714202587000,"contributors":[{"name":"YTAZWC","email":"18570354653@163.com","commits":5}]},"autoDesc":true,"filePathRelative":"othernotes/面经/小厂面经/小厂面经.md","categoryList":[{"type":10000,"name":"othernotes"},{"type":10006,"name":"面经"},{"type":10007,"name":"小厂面经"}]}`);export{d as comp,h as data};
