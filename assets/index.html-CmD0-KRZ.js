import{_ as a,r as n,o,c as i,a as c,b as e,e as r}from"./app-Dvurjsjw.js";const l={},s=e("h2",{id:"基本介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基本介绍"},[e("span",null,"基本介绍")])],-1),d=e("p",null,"尽量使用合成/聚合(依赖,聚合,组合)的方式, 而不是使用继承",-1),m=e("h2",{id:"实例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#实例"},[e("span",null,"实例")])],-1),p=e("p",null,"以下面UML类图为例:",-1),h=r('<p>解决方式(参考依赖倒转原则中依赖关系传递的三种方式)有三种:</p><ul><li>将A作为B类方法的参数(依赖)</li><li>A作为B类的成员变量, 实例B的同时实例A(组合)</li><li>A作为B类的成员变量, 使用set方法注入A的实例(聚合)</li></ul><h2 id="设计原则核心思想" tabindex="-1"><a class="header-anchor" href="#设计原则核心思想"><span>设计原则核心思想</span></a></h2><ol><li>找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。</li><li>针对接口编程，而不是针对实现编程。</li><li>为了交互对象之间的松耦合设计而努力</li></ol>',4);function u(g,_){const t=n("Mermaid");return o(),i("div",null,[s,d,m,p,c(t,{id:"mermaid-12",code:"eJzT1dXlKsksyUm1UnCtSMwtyEnlAglxJeckFhe7ZCamFyXmcnEpKID5Co4K1UA2CGgr5BekFiWWZObnGWpoKpTlZ6ZgyhjhlDFGyNTCTXcCmg4WABKOCjY1uroKTiB2Xn5JqoLS02VNz+bNedYx8cnuNU/7Vz2bsf7FupVOzzfuftq3+8ne/c+nrHAEcp5N2/ls81QdhZg8iNjz3cufde5/smcWSPHTST2Oz2e1vGhY9nRCx7OG5U8XzXu6Z5dOTN6Lhp4nO6aADetf/6J5L9B8iPanHRue7GpzfLJjLVDfy2Ygvw1igxIXFwAkZI7A",title:"eJxzrUjMLchJBQAK4ALN"}),h])}const f=a(l,[["render",u],["__file","index.html.vue"]]),y=JSON.parse(`{"path":"/design-pattern/n4zaaidx/","title":"合成复用原则","lang":"zh-CN","frontmatter":{"title":"合成复用原则","author":"花木凋零成兰","createTime":"2024/04/17 21:47:11","permalink":"/design-pattern/n4zaaidx/","description":"基本介绍 尽量使用合成/聚合(依赖,聚合,组合)的方式, 而不是使用继承 实例 以下面UML类图为例: 解决方式(参考依赖倒转原则中依赖关系传递的三种方式)有三种: 将A作为B类方法的参数(依赖) A作为B类的成员变量, 实例B的同时实例A(组合) A作为B类的成员变量, 使用set方法注入A的实例(聚合) 设计原则核心思想 找出应用中可能需要变化之处...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://ytazwc.top/blogs/design-pattern/n4zaaidx/"}],["meta",{"property":"og:site_name","content":"花木凋零成兰"}],["meta",{"property":"og:title","content":"合成复用原则"}],["meta",{"property":"og:description","content":"基本介绍 尽量使用合成/聚合(依赖,聚合,组合)的方式, 而不是使用继承 实例 以下面UML类图为例: 解决方式(参考依赖倒转原则中依赖关系传递的三种方式)有三种: 将A作为B类方法的参数(依赖) A作为B类的成员变量, 实例B的同时实例A(组合) A作为B类的成员变量, 使用set方法注入A的实例(聚合) 设计原则核心思想 找出应用中可能需要变化之处..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T14:39:57.000Z"}],["meta",{"property":"article:author","content":"花木凋零成兰"}],["meta",{"property":"article:modified_time","content":"2024-04-27T14:39:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"合成复用原则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-27T14:39:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"花木凋零成兰\\"}]}"]]},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":2,"title":"实例","slug":"实例","link":"#实例","children":[]},{"level":2,"title":"设计原则核心思想","slug":"设计原则核心思想","link":"#设计原则核心思想","children":[]}],"readingTime":{"minutes":0.97,"words":291},"git":{"updatedTime":1714228797000,"contributors":[{"name":"YTAZWC","email":"18570354653@163.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/设计模式/3.七大原则/合成复用原则.md"}`);export{f as comp,y as data};
